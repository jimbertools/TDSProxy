using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;

using TDSProtocol;

namespace TDSProtocolTests
{
	[TestClass]
	public class TDSLogin7MessageTests
	{
		[TestMethod]
		public void TestInterpretPayloadSimple()
		{
			TDSLogin7Message expected =
				new TDSLogin7Message
				{
					TdsVersion = 0x72090002,
					PacketSize = 0x00001000,
					ClientProgVer = 0x07000000,
					ClientPid = 0x00000100,
					ConnectionId = 0x00000000,
					OptionFlags1 = TDSLogin7Message.OptionFlags1Enum.ByteOrderX86 | TDSLogin7Message.OptionFlags1Enum.CharsetASCII | TDSLogin7Message.OptionFlags1Enum.FloatFormatIEEE754 | TDSLogin7Message.OptionFlags1Enum.UseDBNotify | TDSLogin7Message.OptionFlags1Enum.DatabaseFatal | TDSLogin7Message.OptionFlags1Enum.SetLangNotify,
					OptionFlags2 = TDSLogin7Message.OptionFlags2Enum.LanguageFatal | TDSLogin7Message.OptionFlags2Enum.ODBC | TDSLogin7Message.OptionFlags2Enum.UserTypeNormal,
					TypeFlags = TDSLogin7Message.TypeFlagsEnum.SqlTypeDefault,
					OptionFlags3 = TDSLogin7Message.OptionFlags3Enum.UnknownCollationHandlingRestricted,
					ClientTimeZone = 480,
					ClientLCID = (TDSLogin7Message.ClientLCIDEnum)0x0409,
					HostName = "skostov1",
					UserName = "sa",
					// ReSharper disable once StringLiteralTypo
					AppName = "OSQL-32",
					ClientInterfaceName = "ODBC",
					ClientID = new byte[] { 0x00, 0x50, 0x8B, 0xE2, 0xB7, 0x8F }
				};

			TDSLogin7Message actual =
				new TDSLogin7Message
				{
					Payload = new byte[]
							  {
								  0x88, 0x00, 0x00, 0x00, 0x02, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
								  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x00, 0x00, 0xE0, 0x01, 0x00, 0x00,
								  0x09, 0x04, 0x00, 0x00, 0x5E, 0x00, 0x08, 0x00, 0x6E, 0x00, 0x02, 0x00, 0x72, 0x00, 0x00, 0x00,
								  0x72, 0x00, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x04, 0x00,
								  0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x50, 0x8B, 0xE2, 0xB7, 0x8F, 0x88, 0x00,
								  0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x00,
								  0x6B, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x76, 0x00, 0x31, 0x00, 0x73, 0x00,
								  0x61, 0x00, 0x4F, 0x00, 0x53, 0x00, 0x51, 0x00, 0x4C, 0x00, 0x2D, 0x00, 0x33, 0x00, 0x32, 0x00,
								  0x4F, 0x00, 0x44, 0x00, 0x42, 0x00, 0x43, 0x00
							  }
				};
			actual.InterpretPayload();

			Assert.AreEqual(expected.TdsVersion, actual.TdsVersion);
			Assert.AreEqual(expected.PacketSize, actual.PacketSize);
			Assert.AreEqual(expected.ClientProgVer, actual.ClientProgVer);
			Assert.AreEqual(expected.ClientPid, actual.ClientPid);
			Assert.AreEqual(expected.ConnectionId, actual.ConnectionId);
			Assert.AreEqual(expected.OptionFlags1, actual.OptionFlags1);
			Assert.AreEqual(expected.OptionFlags2, actual.OptionFlags2);
			Assert.AreEqual(expected.TypeFlags, actual.TypeFlags);
			Assert.AreEqual(expected.OptionFlags3, actual.OptionFlags3);
			Assert.AreEqual(expected.ClientTimeZone, actual.ClientTimeZone);
			Assert.AreEqual(expected.ClientLCID, actual.ClientLCID);
			Assert.AreEqual(expected.HostName, actual.HostName);
			Assert.AreEqual(expected.UserName, actual.UserName);
			Assert.AreEqual(expected.Password, actual.Password);
			Assert.AreEqual(expected.AppName, actual.AppName);
			Assert.AreEqual(expected.ServerName, actual.ServerName);
			EnumerableAssert.AreEqual(expected.FeatureExt, actual.FeatureExt, FeatureOptComparer.Instance);
			Assert.AreEqual(expected.ClientInterfaceName, actual.ClientInterfaceName);
			Assert.AreEqual(expected.Language, actual.Language);
			Assert.AreEqual(expected.Database, actual.Database);
			EnumerableAssert.AreEqual(expected.ClientID, actual.ClientID);
			EnumerableAssert.AreEqual(expected.SSPI, actual.SSPI);
			Assert.AreEqual(expected.AttachDBFile, actual.AttachDBFile);
			Assert.AreEqual(expected.ChangePassword, actual.ChangePassword);
		}

		[TestMethod]
		public void TestInterpretPayloadWithSessionRecovery()
		{
			TDSLogin7Message expected =
				new TDSLogin7Message
				{
					TdsVersion = 0x74000004,
					PacketSize = 0x00001000,
					ClientProgVer = 0x07000000,
					ClientPid = 0x00000100,
					ConnectionId = 0x00000000,
					OptionFlags1 = TDSLogin7Message.OptionFlags1Enum.ByteOrderX86 | TDSLogin7Message.OptionFlags1Enum.CharsetASCII | TDSLogin7Message.OptionFlags1Enum.FloatFormatIEEE754 | TDSLogin7Message.OptionFlags1Enum.UseDBNotify | TDSLogin7Message.OptionFlags1Enum.DatabaseFatal | TDSLogin7Message.OptionFlags1Enum.SetLangNotify,
					OptionFlags2 = TDSLogin7Message.OptionFlags2Enum.LanguageFatal | TDSLogin7Message.OptionFlags2Enum.ODBC | TDSLogin7Message.OptionFlags2Enum.UserTypeNormal,
					TypeFlags = TDSLogin7Message.TypeFlagsEnum.SqlTypeDefault,
					OptionFlags3 = TDSLogin7Message.OptionFlags3Enum.UnknownCollationHandlingRestricted | TDSLogin7Message.OptionFlags3Enum.Extension,
					ClientTimeZone = 480,
					ClientLCID = (TDSLogin7Message.ClientLCIDEnum)0x0409,
					UserName = "sa",
					// ReSharper disable StringLiteralTypo
					Password = "abcdEFGH",
					AppName = "OSQL-32",
					ClientInterfaceName = "ODBC",
					Database = "tempdb",
					// ReSharper restore StringLiteralTypo
					ClientID = new byte[] { 0x00, 0x50, 0x8B, 0xE2, 0xB7, 0x8F },
					FeatureExt = new[]
					{
						new TDSLogin7Message.FeatureOpt
						{

							FeatureId = TDSLogin7Message.FeatureId.SessionRecovery,
							FeatureData = new byte[]
							{
								0x56, 0x00, 0x00, 0x00, 0x06, 0x6D, 0x00, 0x61, 0x00, 0x73, 0x00, 0x74, 0x00, 0x65, 0x00, 0x72,
								0x00, 0x05, 0x09, 0x04, 0xD0, 0x00, 0x34, 0x0A, 0x75, 0x00, 0x73, 0x00, 0x5F, 0x00, 0x65, 0x00,
								0x6E, 0x00, 0x67, 0x00, 0x6C, 0x00, 0x69, 0x00, 0x73, 0x00, 0x68, 0x00, 0x00, 0x09, 0x00, 0x60,
								0x81, 0x14, 0xFF, 0xE7, 0xFF, 0xFF, 0x00, 0x02, 0x02, 0x07, 0x01, 0x04, 0x01, 0x00, 0x05, 0x04,
								0xFF, 0xFF, 0xFF, 0xFF, 0x06, 0x01, 0x00, 0x07, 0x01, 0x02, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,
								0x00, 0x00, 0x00, 0x00, 0x09, 0x04, 0xFF, 0xFF, 0xFF, 0xFF, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00,
								0x00, 0x09, 0x04, 0x28, 0x23, 0x00, 0x00
							}
						}
					}
				};

			TDSLogin7Message actual =
				new TDSLogin7Message
				{
					Payload = new byte[]
							  {
								  0x05, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x74, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
								  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x00, 0x10, 0xE0, 0x01, 0x00, 0x00,
								  0x09, 0x04, 0x00, 0x00, 0x5E, 0x00, 0x00, 0x00, 0x5E, 0x00, 0x02, 0x00, 0x62, 0x00, 0x08, 0x00,
								  0x72, 0x00, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x04, 0x00, 0x84, 0x00, 0x04, 0x00,
								  0x8C, 0x00, 0x00, 0x00, 0x8C, 0x00, 0x06, 0x00, 0x00, 0x50, 0x8B, 0xE2, 0xB7, 0x8F, 0x98, 0x00,
								  0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x00,
								  0x61, 0x00,  179,  165,  131,  165,  147,  165,  227,  165,  241,  165,  193,  165,  209,  165,
									33,  165, 0x4F, 0x00, 0x53, 0x00, 0x51, 0x00, 0x4C, 0x00, 0x2D, 0x00, 0x33, 0x00, 0x32, 0x00,
								  0x98, 0x00, 0x00, 0x00, 0x4F, 0x00, 0x44, 0x00, 0x42, 0x00, 0x43, 0x00, 0x74, 0x00, 0x65, 0x00,
								  0x6D, 0x00, 0x70, 0x00, 0x64, 0x00, 0x62, 0x00, 0x01, 0x67, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00,
								  0x00, 0x06, 0x6D, 0x00, 0x61, 0x00, 0x73, 0x00, 0x74, 0x00, 0x65, 0x00, 0x72, 0x00, 0x05, 0x09,
								  0x04, 0xD0, 0x00, 0x34, 0x0A, 0x75, 0x00, 0x73, 0x00, 0x5F, 0x00, 0x65, 0x00, 0x6E, 0x00, 0x67,
								  0x00, 0x6C, 0x00, 0x69, 0x00, 0x73, 0x00, 0x68, 0x00, 0x00, 0x09, 0x00, 0x60, 0x81, 0x14, 0xFF,
								  0xE7, 0xFF, 0xFF, 0x00, 0x02, 0x02, 0x07, 0x01, 0x04, 0x01, 0x00, 0x05, 0x04, 0xFF, 0xFF, 0xFF,
								  0xFF, 0x06, 0x01, 0x00, 0x07, 0x01, 0x02, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
								  0x00, 0x09, 0x04, 0xFF, 0xFF, 0xFF, 0xFF, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x04,
								  0x28, 0x23, 0x00, 0x00, 0xFF
							  }
				};
			actual.InterpretPayload();

			Assert.AreEqual(expected.TdsVersion, actual.TdsVersion);
			Assert.AreEqual(expected.PacketSize, actual.PacketSize);
			Assert.AreEqual(expected.ClientProgVer, actual.ClientProgVer);
			Assert.AreEqual(expected.ClientPid, actual.ClientPid);
			Assert.AreEqual(expected.ConnectionId, actual.ConnectionId);
			Assert.AreEqual(expected.OptionFlags1, actual.OptionFlags1);
			Assert.AreEqual(expected.OptionFlags2, actual.OptionFlags2);
			Assert.AreEqual(expected.TypeFlags, actual.TypeFlags);
			Assert.AreEqual(expected.OptionFlags3, actual.OptionFlags3);
			Assert.AreEqual(expected.ClientTimeZone, actual.ClientTimeZone);
			Assert.AreEqual(expected.ClientLCID, actual.ClientLCID);
			Assert.AreEqual(expected.HostName, actual.HostName);
			Assert.AreEqual(expected.UserName, actual.UserName);
			Assert.AreEqual(expected.Password, actual.Password);
			Assert.AreEqual(expected.AppName, actual.AppName);
			Assert.AreEqual(expected.ServerName, actual.ServerName);
			EnumerableAssert.AreEqual(expected.FeatureExt, actual.FeatureExt, FeatureOptComparer.Instance);
			Assert.AreEqual(expected.ClientInterfaceName, actual.ClientInterfaceName);
			Assert.AreEqual(expected.Language, actual.Language);
			Assert.AreEqual(expected.Database, actual.Database);
			EnumerableAssert.AreEqual(expected.ClientID, actual.ClientID);
			EnumerableAssert.AreEqual(expected.SSPI, actual.SSPI);
			Assert.AreEqual(expected.AttachDBFile, actual.AttachDBFile);
			Assert.AreEqual(expected.ChangePassword, actual.ChangePassword);
		}

		[TestMethod]
		public void TestInterpretPayloadWithFederation()
		{
			TDSLogin7Message expected =
				new TDSLogin7Message
				{
					TdsVersion = 0x74000004,
					PacketSize = 0x00001000,
					ClientProgVer = 0x07000000,
					ClientPid = 0x00003740,
					ConnectionId = 0x00000000,
					OptionFlags1 = TDSLogin7Message.OptionFlags1Enum.ByteOrderX86 | TDSLogin7Message.OptionFlags1Enum.CharsetASCII | TDSLogin7Message.OptionFlags1Enum.FloatFormatIEEE754 |
						TDSLogin7Message.OptionFlags1Enum.UseDBNotify | TDSLogin7Message.OptionFlags1Enum.DatabaseFatal | TDSLogin7Message.OptionFlags1Enum.SetLangNotify,
					OptionFlags2 = TDSLogin7Message.OptionFlags2Enum.LanguageFatal | TDSLogin7Message.OptionFlags2Enum.ODBC | TDSLogin7Message.OptionFlags2Enum.UserTypeNormal,
					TypeFlags = TDSLogin7Message.TypeFlagsEnum.SqlTypeDefault,
					OptionFlags3 = TDSLogin7Message.OptionFlags3Enum.UnknownCollationHandlingRestricted | TDSLogin7Message.OptionFlags3Enum.Extension,
					ClientTimeZone = 480,
					ClientLCID = (TDSLogin7Message.ClientLCIDEnum)0x0409,
					// ReSharper disable StringLiteralTypo
					HostName = "DANBENED3-XGZUO",
					AppName = "SQLCMD",
					ServerName = "cloud.dev.mscds.com,1435",
					// ReSharper restore StringLiteralTypo
					ClientInterfaceName = "ODBC",
					ClientID = new byte[] { 0x00, 0x15, 0x5D, 0x71, 0xE7, 0x42 },
					FeatureExt = new[]
					{
						new TDSLogin7Message.FeatureOpt
						{
							FeatureId = TDSLogin7Message.FeatureId.FedAuth,
							FeatureData = new byte[]
							{
								0x01, 0xE2, 0x06, 0x00, 0x00, 0x74, 0x00, 0x3D, 0x00, 0x45, 0x00, 0x77, 0x00, 0x43, 0x00, 0x51,
								0x00, 0x41, 0x00, 0x6A, 0x00, 0x4B, 0x00, 0x6A, 0x00, 0x42, 0x00, 0x77, 0x00, 0x41, 0x00, 0x55,
								0x00, 0x53, 0x00, 0x30, 0x00, 0x48, 0x00, 0x6F, 0x00, 0x2F, 0x00, 0x30, 0x00, 0x65, 0x00, 0x31,
								0x00, 0x52, 0x00, 0x35, 0x00, 0x4D, 0x00, 0x32, 0x00, 0x77, 0x00, 0x37, 0x00, 0x74, 0x00, 0x69,
								0x00, 0x44, 0x00, 0x72, 0x00, 0x36, 0x00, 0x70, 0x00, 0x4D, 0x00, 0x63, 0x00, 0x75, 0x00, 0x77,
								0x00, 0x33, 0x00, 0x35, 0x00, 0x6B, 0x00, 0x41, 0x00, 0x41, 0x00, 0x61, 0x00, 0x62, 0x00, 0x76,
								0x00, 0x45, 0x00, 0x38, 0x00, 0x6F, 0x00, 0x55, 0x00, 0x45, 0x00, 0x71, 0x00, 0x2F, 0x00, 0x50,
								0x00, 0x45, 0x00, 0x75, 0x00, 0x4C, 0x00, 0x37, 0x00, 0x32, 0x00, 0x64, 0x00, 0x54, 0x00, 0x74,
								0x00, 0x64, 0x00, 0x4D, 0x00, 0x42, 0x00, 0x43, 0x00, 0x7A, 0x00, 0x46, 0x00, 0x37, 0x00, 0x41,
								0x00, 0x64, 0x00, 0x4A, 0x00, 0x6D, 0x00, 0x6E, 0x00, 0x70, 0x00, 0x45, 0x00, 0x68, 0x00, 0x34,
								0x00, 0x32, 0x00, 0x65, 0x00, 0x41, 0x00, 0x46, 0x00, 0x57, 0x00, 0x37, 0x00, 0x2F, 0x00, 0x38,
								0x00, 0x49, 0x00, 0x6A, 0x00, 0x41, 0x00, 0x53, 0x00, 0x6D, 0x00, 0x78, 0x00, 0x79, 0x00, 0x50,
								0x00, 0x30, 0x00, 0x30, 0x00, 0x71, 0x00, 0x59, 0x00, 0x64, 0x00, 0x76, 0x00, 0x65, 0x00, 0x31,
								0x00, 0x5A, 0x00, 0x6B, 0x00, 0x45, 0x00, 0x2F, 0x00, 0x58, 0x00, 0x6C, 0x00, 0x63, 0x00, 0x4E,
								0x00, 0x79, 0x00, 0x69, 0x00, 0x77, 0x00, 0x6F, 0x00, 0x55, 0x00, 0x76, 0x00, 0x54, 0x00, 0x4E,
								0x00, 0x4F, 0x00, 0x6B, 0x00, 0x74, 0x00, 0x42, 0x00, 0x45, 0x00, 0x4C, 0x00, 0x71, 0x00, 0x76,
								0x00, 0x37, 0x00, 0x58, 0x00, 0x4A, 0x00, 0x54, 0x00, 0x6F, 0x00, 0x47, 0x00, 0x71, 0x00, 0x56,
								0x00, 0x32, 0x00, 0x6F, 0x00, 0x6B, 0x00, 0x51, 0x00, 0x6E, 0x00, 0x2F, 0x00, 0x65, 0x00, 0x63,
								0x00, 0x50, 0x00, 0x41, 0x00, 0x78, 0x00, 0x32, 0x00, 0x71, 0x00, 0x6A, 0x00, 0x55, 0x00, 0x57,
								0x00, 0x74, 0x00, 0x6B, 0x00, 0x54, 0x00, 0x59, 0x00, 0x56, 0x00, 0x66, 0x00, 0x62, 0x00, 0x72,
								0x00, 0x51, 0x00, 0x58, 0x00, 0x78, 0x00, 0x76, 0x00, 0x4E, 0x00, 0x58, 0x00, 0x66, 0x00, 0x69,
								0x00, 0x72, 0x00, 0x77, 0x00, 0x47, 0x00, 0x57, 0x00, 0x63, 0x00, 0x43, 0x00, 0x45, 0x00, 0x4B,
								0x00, 0x79, 0x00, 0x46, 0x00, 0x64, 0x00, 0x76, 0x00, 0x35, 0x00, 0x62, 0x00, 0x78, 0x00, 0x55,
								0x00, 0x75, 0x00, 0x68, 0x00, 0x69, 0x00, 0x49, 0x00, 0x62, 0x00, 0x39, 0x00, 0x42, 0x00, 0x55,
								0x00, 0x56, 0x00, 0x54, 0x00, 0x56, 0x00, 0x4B, 0x00, 0x6A, 0x00, 0x57, 0x00, 0x51, 0x00, 0x34,
								0x00, 0x78, 0x00, 0x4E, 0x00, 0x46, 0x00, 0x4E, 0x00, 0x6B, 0x00, 0x43, 0x00, 0x33, 0x00, 0x73,
								0x00, 0x58, 0x00, 0x71, 0x00, 0x6F, 0x00, 0x46, 0x00, 0x52, 0x00, 0x31, 0x00, 0x49, 0x00, 0x46,
								0x00, 0x64, 0x00, 0x76, 0x00, 0x6A, 0x00, 0x4C, 0x00, 0x76, 0x00, 0x63, 0x00, 0x71, 0x00, 0x71,
								0x00, 0x38, 0x00, 0x70, 0x00, 0x47, 0x00, 0x69, 0x00, 0x54, 0x00, 0x64, 0x00, 0x51, 0x00, 0x2F,
								0x00, 0x76, 0x00, 0x37, 0x00, 0x6F, 0x00, 0x44, 0x00, 0x6B, 0x00, 0x38, 0x00, 0x78, 0x00, 0x5A,
								0x00, 0x42, 0x00, 0x6E, 0x00, 0x61, 0x00, 0x73, 0x00, 0x4C, 0x00, 0x36, 0x00, 0x71, 0x00, 0x2F,
								0x00, 0x62, 0x00, 0x38, 0x00, 0x36, 0x00, 0x73, 0x00, 0x5A, 0x00, 0x6C, 0x00, 0x2B, 0x00, 0x55,
								0x00, 0x35, 0x00, 0x77, 0x00, 0x69, 0x00, 0x4C, 0x00, 0x50, 0x00, 0x50, 0x00, 0x54, 0x00, 0x68,
								0x00, 0x67, 0x00, 0x4D, 0x00, 0x70, 0x00, 0x49, 0x00, 0x46, 0x00, 0x2F, 0x00, 0x42, 0x00, 0x61,
								0x00, 0x43, 0x00, 0x2F, 0x00, 0x72, 0x00, 0x45, 0x00, 0x4F, 0x00, 0x51, 0x00, 0x50, 0x00, 0x6B,
								0x00, 0x6B, 0x00, 0x63, 0x00, 0x51, 0x00, 0x4A, 0x00, 0x4F, 0x00, 0x56, 0x00, 0x54, 0x00, 0x71,
								0x00, 0x51, 0x00, 0x72, 0x00, 0x64, 0x00, 0x63, 0x00, 0x4B, 0x00, 0x4F, 0x00, 0x4D, 0x00, 0x56,
								0x00, 0x4E, 0x00, 0x4A, 0x00, 0x61, 0x00, 0x55, 0x00, 0x50, 0x00, 0x49, 0x00, 0x52, 0x00, 0x33,
								0x00, 0x64, 0x00, 0x2B, 0x00, 0x42, 0x00, 0x62, 0x00, 0x43, 0x00, 0x66, 0x00, 0x31, 0x00, 0x6D,
								0x00, 0x5A, 0x00, 0x62, 0x00, 0x7A, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x4F, 0x00, 0x51,
								0x00, 0x77, 0x00, 0x39, 0x00, 0x57, 0x00, 0x37, 0x00, 0x49, 0x00, 0x77, 0x00, 0x63, 0x00, 0x6D,
								0x00, 0x30, 0x00, 0x45, 0x00, 0x44, 0x00, 0x69, 0x00, 0x78, 0x00, 0x51, 0x00, 0x71, 0x00, 0x70,
								0x00, 0x41, 0x00, 0x74, 0x00, 0x61, 0x00, 0x75, 0x00, 0x63, 0x00, 0x42, 0x00, 0x48, 0x00, 0x4F,
								0x00, 0x33, 0x00, 0x46, 0x00, 0x75, 0x00, 0x37, 0x00, 0x6D, 0x00, 0x49, 0x00, 0x63, 0x00, 0x69,
								0x00, 0x78, 0x00, 0x46, 0x00, 0x39, 0x00, 0x67, 0x00, 0x53, 0x00, 0x2F, 0x00, 0x46, 0x00, 0x4B,
								0x00, 0x38, 0x00, 0x2F, 0x00, 0x37, 0x00, 0x6C, 0x00, 0x6E, 0x00, 0x78, 0x00, 0x34, 0x00, 0x53,
								0x00, 0x6E, 0x00, 0x33, 0x00, 0x5A, 0x00, 0x2F, 0x00, 0x51, 0x00, 0x7A, 0x00, 0x2B, 0x00, 0x48,
								0x00, 0x76, 0x00, 0x6A, 0x00, 0x4C, 0x00, 0x49, 0x00, 0x57, 0x00, 0x2F, 0x00, 0x76, 0x00, 0x44,
								0x00, 0x77, 0x00, 0x7A, 0x00, 0x77, 0x00, 0x44, 0x00, 0x5A, 0x00, 0x67, 0x00, 0x41, 0x00, 0x41,
								0x00, 0x43, 0x00, 0x4E, 0x00, 0x6D, 0x00, 0x73, 0x00, 0x64, 0x00, 0x34, 0x00, 0x65, 0x00, 0x79,
								0x00, 0x68, 0x00, 0x4E, 0x00, 0x49, 0x00, 0x75, 0x00, 0x59, 0x00, 0x41, 0x00, 0x47, 0x00, 0x62,
								0x00, 0x58, 0x00, 0x62, 0x00, 0x41, 0x00, 0x4B, 0x00, 0x51, 0x00, 0x37, 0x00, 0x63, 0x00, 0x4A,
								0x00, 0x66, 0x00, 0x31, 0x00, 0x6B, 0x00, 0x78, 0x00, 0x31, 0x00, 0x31, 0x00, 0x6D, 0x00, 0x4E,
								0x00, 0x42, 0x00, 0x49, 0x00, 0x34, 0x00, 0x79, 0x00, 0x42, 0x00, 0x44, 0x00, 0x36, 0x00, 0x4E,
								0x00, 0x4E, 0x00, 0x54, 0x00, 0x53, 0x00, 0x6F, 0x00, 0x63, 0x00, 0x75, 0x00, 0x46, 0x00, 0x42,
								0x00, 0x6A, 0x00, 0x4F, 0x00, 0x6B, 0x00, 0x2B, 0x00, 0x73, 0x00, 0x41, 0x00, 0x5A, 0x00, 0x4C,
								0x00, 0x35, 0x00, 0x5A, 0x00, 0x34, 0x00, 0x56, 0x00, 0x4E, 0x00, 0x32, 0x00, 0x4D, 0x00, 0x4C,
								0x00, 0x71, 0x00, 0x49, 0x00, 0x35, 0x00, 0x71, 0x00, 0x38, 0x00, 0x58, 0x00, 0x54, 0x00, 0x58,
								0x00, 0x35, 0x00, 0x72, 0x00, 0x58, 0x00, 0x57, 0x00, 0x65, 0x00, 0x79, 0x00, 0x4B, 0x00, 0x75,
								0x00, 0x62, 0x00, 0x76, 0x00, 0x49, 0x00, 0x2F, 0x00, 0x59, 0x00, 0x2F, 0x00, 0x6D, 0x00, 0x64,
								0x00, 0x42, 0x00, 0x6A, 0x00, 0x64, 0x00, 0x4E, 0x00, 0x36, 0x00, 0x37, 0x00, 0x51, 0x00, 0x57,
								0x00, 0x49, 0x00, 0x72, 0x00, 0x75, 0x00, 0x65, 0x00, 0x73, 0x00, 0x4B, 0x00, 0x52, 0x00, 0x56,
								0x00, 0x65, 0x00, 0x32, 0x00, 0x35, 0x00, 0x31, 0x00, 0x31, 0x00, 0x54, 0x00, 0x6E, 0x00, 0x42,
								0x00, 0x58, 0x00, 0x46, 0x00, 0x62, 0x00, 0x70, 0x00, 0x53, 0x00, 0x47, 0x00, 0x6E, 0x00, 0x42,
								0x00, 0x4A, 0x00, 0x65, 0x00, 0x38, 0x00, 0x6F, 0x00, 0x31, 0x00, 0x4B, 0x00, 0x69, 0x00, 0x50,
								0x00, 0x55, 0x00, 0x70, 0x00, 0x55, 0x00, 0x4B, 0x00, 0x6A, 0x00, 0x48, 0x00, 0x74, 0x00, 0x54,
								0x00, 0x6D, 0x00, 0x75, 0x00, 0x34, 0x00, 0x36, 0x00, 0x4F, 0x00, 0x43, 0x00, 0x4F, 0x00, 0x38,
								0x00, 0x4A, 0x00, 0x49, 0x00, 0x62, 0x00, 0x48, 0x00, 0x47, 0x00, 0x6C, 0x00, 0x70, 0x00, 0x4F,
								0x00, 0x70, 0x00, 0x62, 0x00, 0x70, 0x00, 0x6E, 0x00, 0x50, 0x00, 0x49, 0x00, 0x73, 0x00, 0x79,
								0x00, 0x36, 0x00, 0x39, 0x00, 0x49, 0x00, 0x58, 0x00, 0x6B, 0x00, 0x45, 0x00, 0x7A, 0x00, 0x67,
								0x00, 0x38, 0x00, 0x64, 0x00, 0x36, 0x00, 0x34, 0x00, 0x43, 0x00, 0x74, 0x00, 0x65, 0x00, 0x54,
								0x00, 0x2F, 0x00, 0x61, 0x00, 0x63, 0x00, 0x73, 0x00, 0x35, 0x00, 0x68, 0x00, 0x4F, 0x00, 0x72,
								0x00, 0x62, 0x00, 0x32, 0x00, 0x44, 0x00, 0x73, 0x00, 0x44, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x4A,
								0x00, 0x71, 0x00, 0x65, 0x00, 0x6D, 0x00, 0x46, 0x00, 0x58, 0x00, 0x54, 0x00, 0x47, 0x00, 0x6D,
								0x00, 0x35, 0x00, 0x30, 0x00, 0x37, 0x00, 0x30, 0x00, 0x65, 0x00, 0x71, 0x00, 0x35, 0x00, 0x74,
								0x00, 0x75, 0x00, 0x6A, 0x00, 0x69, 0x00, 0x5A, 0x00, 0x75, 0x00, 0x43, 0x00, 0x52, 0x00, 0x30,
								0x00, 0x4C, 0x00, 0x54, 0x00, 0x36, 0x00, 0x62, 0x00, 0x59, 0x00, 0x49, 0x00, 0x76, 0x00, 0x59,
								0x00, 0x64, 0x00, 0x76, 0x00, 0x42, 0x00, 0x6D, 0x00, 0x70, 0x00, 0x52, 0x00, 0x6C, 0x00, 0x31,
								0x00, 0x33, 0x00, 0x38, 0x00, 0x41, 0x00, 0x53, 0x00, 0x42, 0x00, 0x32, 0x00, 0x58, 0x00, 0x48,
								0x00, 0x30, 0x00, 0x36, 0x00, 0x43, 0x00, 0x4B, 0x00, 0x39, 0x00, 0x33, 0x00, 0x55, 0x00, 0x38,
								0x00, 0x63, 0x00, 0x4F, 0x00, 0x54, 0x00, 0x38, 0x00, 0x68, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x6A,
								0x00, 0x32, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x49, 0x00, 0x61, 0x00, 0x2B, 0x00, 0x4B, 0x00, 0x30,
								0x00, 0x37, 0x00, 0x62, 0x00, 0x72, 0x00, 0x6F, 0x00, 0x66, 0x00, 0x43, 0x00, 0x50, 0x00, 0x4B,
								0x00, 0x35, 0x00, 0x37, 0x00, 0x51, 0x00, 0x66, 0x00, 0x43, 0x00, 0x4D, 0x00, 0x35, 0x00, 0x32,
								0x00, 0x4F, 0x00, 0x49, 0x00, 0x4B, 0x00, 0x33, 0x00, 0x2F, 0x00, 0x30, 0x00, 0x67, 0x00, 0x70,
								0x00, 0x6F, 0x00, 0x4C, 0x00, 0x41, 0x00, 0x6C, 0x00, 0x4A, 0x00, 0x6E, 0x00, 0x49, 0x00, 0x56,
								0x00, 0x59, 0x00, 0x72, 0x00, 0x45, 0x00, 0x6B, 0x00, 0x6B, 0x00, 0x41, 0x00, 0x6E, 0x00, 0x47,
								0x00, 0x59, 0x00, 0x79, 0x00, 0x70, 0x00, 0x52, 0x00, 0x34, 0x00, 0x45, 0x00, 0x34, 0x00, 0x6F,
								0x00, 0x4D, 0x00, 0x4D, 0x00, 0x33, 0x00, 0x63, 0x00, 0x48, 0x00, 0x32, 0x00, 0x38, 0x00, 0x4D,
								0x00, 0x42, 0x00, 0x4C, 0x00, 0x66, 0x00, 0x30, 0x00, 0x76, 0x00, 0x47, 0x00, 0x57, 0x00, 0x2F,
								0x00, 0x4D, 0x00, 0x62, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x61, 0x00, 0x31, 0x00, 0x35, 0x00, 0x47,
								0x00, 0x37, 0x00, 0x47, 0x00, 0x72, 0x00, 0x71, 0x00, 0x76, 0x00, 0x54, 0x00, 0x41, 0x00, 0x73,
								0x00, 0x5A, 0x00, 0x30, 0x00, 0x78, 0x00, 0x42, 0x00, 0x6C, 0x00, 0x35, 0x00, 0x76, 0x00, 0x38,
								0x00, 0x74, 0x00, 0x44, 0x00, 0x31, 0x00, 0x4F, 0x00, 0x70, 0x00, 0x70, 0x00, 0x6B, 0x00, 0x47,
								0x00, 0x6D, 0x00, 0x2B, 0x00, 0x78, 0x00, 0x56, 0x00, 0x62, 0x00, 0x54, 0x00, 0x78, 0x00, 0x49,
								0x00, 0x6E, 0x00, 0x2F, 0x00, 0x31, 0x00, 0x7A, 0x00, 0x51, 0x00, 0x67, 0x00, 0x67, 0x00, 0x32,
								0x00, 0x71, 0x00, 0x54, 0x00, 0x4F, 0x00, 0x45, 0x00, 0x53, 0x00, 0x6D, 0x00, 0x6E, 0x00, 0x63,
								0x00, 0x49, 0x00, 0x4B, 0x00, 0x38, 0x00, 0x49, 0x00, 0x44, 0x00, 0x6A, 0x00, 0x46, 0x00, 0x50,
								0x00, 0x7A, 0x00, 0x79, 0x00, 0x59, 0x00, 0x31, 0x00, 0x71, 0x00, 0x38, 0x00, 0x45, 0x00, 0x49,
								0x00, 0x6A, 0x00, 0x38, 0x00, 0x39, 0x00, 0x52, 0x00, 0x72, 0x00, 0x2B, 0x00, 0x63, 0x00, 0x6C,
								0x00, 0x51, 0x00, 0x4C, 0x00, 0x33, 0x00, 0x62, 0x00, 0x76, 0x00, 0x39, 0x00, 0x69, 0x00, 0x38,
								0x00, 0x4F, 0x00, 0x34, 0x00, 0x68, 0x00, 0x77, 0x00, 0x66, 0x00, 0x43, 0x00, 0x62, 0x00, 0x5A,
								0x00, 0x51, 0x00, 0x65, 0x00, 0x63, 0x00, 0x38, 0x00, 0x59, 0x00, 0x4F, 0x00, 0x31, 0x00, 0x4D,
								0x00, 0x67, 0x00, 0x4F, 0x00, 0x5A, 0x00, 0x32, 0x00, 0x63, 0x00, 0x2B, 0x00, 0x5A, 0x00, 0x74,
								0x00, 0x39, 0x00, 0x45, 0x00, 0x55, 0x00, 0x54, 0x00, 0x67, 0x00, 0x31, 0x00, 0x78, 0x00, 0x51,
								0x00, 0x49, 0x00, 0x31, 0x00, 0x6A, 0x00, 0x49, 0x00, 0x71, 0x00, 0x76, 0x00, 0x2B, 0x00, 0x65,
								0x00, 0x47, 0x00, 0x63, 0x00, 0x62, 0x00, 0x47, 0x00, 0x50, 0x00, 0x66, 0x00, 0x47, 0x00, 0x78,
								0x00, 0x4C, 0x00, 0x4C, 0x00, 0x45, 0x00, 0x57, 0x00, 0x76, 0x00, 0x66, 0x00, 0x2B, 0x00, 0x6A,
								0x00, 0x54, 0x00, 0x71, 0x00, 0x58, 0x00, 0x63, 0x00, 0x6B, 0x00, 0x55, 0x00, 0x68, 0x00, 0x79,
								0x00, 0x4A, 0x00, 0x42, 0x00, 0x47, 0x00, 0x33, 0x00, 0x6D, 0x00, 0x41, 0x00, 0x45, 0x00, 0x3D,
								0x00, 0x26, 0x00, 0x70, 0x00, 0x3D, 0x00, 0xDF, 0x31, 0x12, 0x79, 0x58, 0x7C, 0x0F, 0xCD, 0x2B,
								0xED, 0x31, 0x0D, 0x8A, 0x06, 0x71, 0xA7, 0xC4, 0xA6, 0xDE, 0xBB, 0x08, 0x4F, 0x37, 0x12, 0x07,
								0xE2, 0xE9, 0x09, 0xC7, 0xB0, 0x2A, 0x1D, 0x74, 0x6C, 0x73, 0x2D, 0x75, 0x6E, 0x69, 0x71, 0x75,
								0x65, 0x3A, 0x20, 0x87, 0xE9, 0x38, 0xE3, 0x2C, 0x32, 0x4F, 0x6C, 0xF9, 0x8E, 0x5B, 0x0D, 0x40,
								0xB2, 0x1B, 0x57, 0x0E, 0xAB, 0xFE, 0xEF, 0x2F, 0xCD, 0x58, 0xDA, 0x0F, 0x7F, 0xBD, 0x9C, 0xD0,
								0x8B, 0xF2, 0x15, 0x85, 0xF3, 0x83, 0x20, 0x7C, 0x22, 0xF8, 0x17, 0x9A, 0x95, 0x8F
							}
						}
					}
				};

			var actual =
				new TDSLogin7Message
				{
					Payload = new byte[]
							  {
								  0x08, 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x74, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
								  0x40, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x00, 0x10, 0xE0, 0x01, 0x00, 0x00,
				0x09, 0x04, 0x00, 0x00, 0x5E, 0x00, 0x0F, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00,
				0x7C, 0x00, 0x06, 0x00, 0x88, 0x00, 0x18, 0x00, 0xB8, 0x00, 0x04, 0x00, 0xBC, 0x00, 0x04, 0x00,
				0xC4, 0x00, 0x00, 0x00, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x15, 0x5D, 0x71, 0xE7, 0x42, 0xC4, 0x00,
				0x00, 0x00, 0xC4, 0x00, 0x00, 0x00, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00,
				0x41, 0x00, 0x4E, 0x00, 0x42, 0x00, 0x45, 0x00, 0x4E, 0x00, 0x45, 0x00, 0x44, 0x00, 0x33, 0x00,
				0x2D, 0x00, 0x58, 0x00, 0x47, 0x00, 0x5A, 0x00, 0x55, 0x00, 0x4F, 0x00, 0x53, 0x00, 0x51, 0x00,
				0x4C, 0x00, 0x43, 0x00, 0x4D, 0x00, 0x44, 0x00, 0x63, 0x00, 0x6C, 0x00, 0x6F, 0x00, 0x75, 0x00,
				0x64, 0x00, 0x2E, 0x00, 0x64, 0x00, 0x65, 0x00, 0x76, 0x00, 0x2E, 0x00, 0x6D, 0x00, 0x73, 0x00,
				0x63, 0x00, 0x64, 0x00, 0x73, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x2C, 0x00,
				0x31, 0x00, 0x34, 0x00, 0x33, 0x00, 0x35, 0x00, 0xC4, 0x00, 0x00, 0x00, 0x4F, 0x00, 0x44, 0x00,
				0x42, 0x00, 0x43, 0x00, 0x02, 0x3E, 0x07, 0x00, 0x00, 0x01, 0xE2, 0x06, 0x00, 0x00, 0x74, 0x00,
				0x3D, 0x00, 0x45, 0x00, 0x77, 0x00, 0x43, 0x00, 0x51, 0x00, 0x41, 0x00, 0x6A, 0x00, 0x4B, 0x00,
				0x6A, 0x00, 0x42, 0x00, 0x77, 0x00, 0x41, 0x00, 0x55, 0x00, 0x53, 0x00, 0x30, 0x00, 0x48, 0x00,
				0x6F, 0x00, 0x2F, 0x00, 0x30, 0x00, 0x65, 0x00, 0x31, 0x00, 0x52, 0x00, 0x35, 0x00, 0x4D, 0x00,
				0x32, 0x00, 0x77, 0x00, 0x37, 0x00, 0x74, 0x00, 0x69, 0x00, 0x44, 0x00, 0x72, 0x00, 0x36, 0x00,
				0x70, 0x00, 0x4D, 0x00, 0x63, 0x00, 0x75, 0x00, 0x77, 0x00, 0x33, 0x00, 0x35, 0x00, 0x6B, 0x00,
				0x41, 0x00, 0x41, 0x00, 0x61, 0x00, 0x62, 0x00, 0x76, 0x00, 0x45, 0x00, 0x38, 0x00, 0x6F, 0x00,
				0x55, 0x00, 0x45, 0x00, 0x71, 0x00, 0x2F, 0x00, 0x50, 0x00, 0x45, 0x00, 0x75, 0x00, 0x4C, 0x00,
				0x37, 0x00, 0x32, 0x00, 0x64, 0x00, 0x54, 0x00, 0x74, 0x00, 0x64, 0x00, 0x4D, 0x00, 0x42, 0x00,
				0x43, 0x00, 0x7A, 0x00, 0x46, 0x00, 0x37, 0x00, 0x41, 0x00, 0x64, 0x00, 0x4A, 0x00, 0x6D, 0x00,
				0x6E, 0x00, 0x70, 0x00, 0x45, 0x00, 0x68, 0x00, 0x34, 0x00, 0x32, 0x00, 0x65, 0x00, 0x41, 0x00,
				0x46, 0x00, 0x57, 0x00, 0x37, 0x00, 0x2F, 0x00, 0x38, 0x00, 0x49, 0x00, 0x6A, 0x00, 0x41, 0x00,
				0x53, 0x00, 0x6D, 0x00, 0x78, 0x00, 0x79, 0x00, 0x50, 0x00, 0x30, 0x00, 0x30, 0x00, 0x71, 0x00,
				0x59, 0x00, 0x64, 0x00, 0x76, 0x00, 0x65, 0x00, 0x31, 0x00, 0x5A, 0x00, 0x6B, 0x00, 0x45, 0x00,
				0x2F, 0x00, 0x58, 0x00, 0x6C, 0x00, 0x63, 0x00, 0x4E, 0x00, 0x79, 0x00, 0x69, 0x00, 0x77, 0x00,
				0x6F, 0x00, 0x55, 0x00, 0x76, 0x00, 0x54, 0x00, 0x4E, 0x00, 0x4F, 0x00, 0x6B, 0x00, 0x74, 0x00,
				0x42, 0x00, 0x45, 0x00, 0x4C, 0x00, 0x71, 0x00, 0x76, 0x00, 0x37, 0x00, 0x58, 0x00, 0x4A, 0x00,
				0x54, 0x00, 0x6F, 0x00, 0x47, 0x00, 0x71, 0x00, 0x56, 0x00, 0x32, 0x00, 0x6F, 0x00, 0x6B, 0x00,
				0x51, 0x00, 0x6E, 0x00, 0x2F, 0x00, 0x65, 0x00, 0x63, 0x00, 0x50, 0x00, 0x41, 0x00, 0x78, 0x00,
				0x32, 0x00, 0x71, 0x00, 0x6A, 0x00, 0x55, 0x00, 0x57, 0x00, 0x74, 0x00, 0x6B, 0x00, 0x54, 0x00,
				0x59, 0x00, 0x56, 0x00, 0x66, 0x00, 0x62, 0x00, 0x72, 0x00, 0x51, 0x00, 0x58, 0x00, 0x78, 0x00,
				0x76, 0x00, 0x4E, 0x00, 0x58, 0x00, 0x66, 0x00, 0x69, 0x00, 0x72, 0x00, 0x77, 0x00, 0x47, 0x00,
				0x57, 0x00, 0x63, 0x00, 0x43, 0x00, 0x45, 0x00, 0x4B, 0x00, 0x79, 0x00, 0x46, 0x00, 0x64, 0x00,
				0x76, 0x00, 0x35, 0x00, 0x62, 0x00, 0x78, 0x00, 0x55, 0x00, 0x75, 0x00, 0x68, 0x00, 0x69, 0x00,
				0x49, 0x00, 0x62, 0x00, 0x39, 0x00, 0x42, 0x00, 0x55, 0x00, 0x56, 0x00, 0x54, 0x00, 0x56, 0x00,
				0x4B, 0x00, 0x6A, 0x00, 0x57, 0x00, 0x51, 0x00, 0x34, 0x00, 0x78, 0x00, 0x4E, 0x00, 0x46, 0x00,
				0x4E, 0x00, 0x6B, 0x00, 0x43, 0x00, 0x33, 0x00, 0x73, 0x00, 0x58, 0x00, 0x71, 0x00, 0x6F, 0x00,
				0x46, 0x00, 0x52, 0x00, 0x31, 0x00, 0x49, 0x00, 0x46, 0x00, 0x64, 0x00, 0x76, 0x00, 0x6A, 0x00,
				0x4C, 0x00, 0x76, 0x00, 0x63, 0x00, 0x71, 0x00, 0x71, 0x00, 0x38, 0x00, 0x70, 0x00, 0x47, 0x00,
				0x69, 0x00, 0x54, 0x00, 0x64, 0x00, 0x51, 0x00, 0x2F, 0x00, 0x76, 0x00, 0x37, 0x00, 0x6F, 0x00,
				0x44, 0x00, 0x6B, 0x00, 0x38, 0x00, 0x78, 0x00, 0x5A, 0x00, 0x42, 0x00, 0x6E, 0x00, 0x61, 0x00,
				0x73, 0x00, 0x4C, 0x00, 0x36, 0x00, 0x71, 0x00, 0x2F, 0x00, 0x62, 0x00, 0x38, 0x00, 0x36, 0x00,
				0x73, 0x00, 0x5A, 0x00, 0x6C, 0x00, 0x2B, 0x00, 0x55, 0x00, 0x35, 0x00, 0x77, 0x00, 0x69, 0x00,
				0x4C, 0x00, 0x50, 0x00, 0x50, 0x00, 0x54, 0x00, 0x68, 0x00, 0x67, 0x00, 0x4D, 0x00, 0x70, 0x00,
				0x49, 0x00, 0x46, 0x00, 0x2F, 0x00, 0x42, 0x00, 0x61, 0x00, 0x43, 0x00, 0x2F, 0x00, 0x72, 0x00,
				0x45, 0x00, 0x4F, 0x00, 0x51, 0x00, 0x50, 0x00, 0x6B, 0x00, 0x6B, 0x00, 0x63, 0x00, 0x51, 0x00,
				0x4A, 0x00, 0x4F, 0x00, 0x56, 0x00, 0x54, 0x00, 0x71, 0x00, 0x51, 0x00, 0x72, 0x00, 0x64, 0x00,
				0x63, 0x00, 0x4B, 0x00, 0x4F, 0x00, 0x4D, 0x00, 0x56, 0x00, 0x4E, 0x00, 0x4A, 0x00, 0x61, 0x00,
				0x55, 0x00, 0x50, 0x00, 0x49, 0x00, 0x52, 0x00, 0x33, 0x00, 0x64, 0x00, 0x2B, 0x00, 0x42, 0x00,
				0x62, 0x00, 0x43, 0x00, 0x66, 0x00, 0x31, 0x00, 0x6D, 0x00, 0x5A, 0x00, 0x62, 0x00, 0x7A, 0x00,
				0x6F, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x4F, 0x00, 0x51, 0x00, 0x77, 0x00, 0x39, 0x00, 0x57, 0x00,
				0x37, 0x00, 0x49, 0x00, 0x77, 0x00, 0x63, 0x00, 0x6D, 0x00, 0x30, 0x00, 0x45, 0x00, 0x44, 0x00,
				0x69, 0x00, 0x78, 0x00, 0x51, 0x00, 0x71, 0x00, 0x70, 0x00, 0x41, 0x00, 0x74, 0x00, 0x61, 0x00,
				0x75, 0x00, 0x63, 0x00, 0x42, 0x00, 0x48, 0x00, 0x4F, 0x00, 0x33, 0x00, 0x46, 0x00, 0x75, 0x00,
				0x37, 0x00, 0x6D, 0x00, 0x49, 0x00, 0x63, 0x00, 0x69, 0x00, 0x78, 0x00, 0x46, 0x00, 0x39, 0x00,
				0x67, 0x00, 0x53, 0x00, 0x2F, 0x00, 0x46, 0x00, 0x4B, 0x00, 0x38, 0x00, 0x2F, 0x00, 0x37, 0x00,
				0x6C, 0x00, 0x6E, 0x00, 0x78, 0x00, 0x34, 0x00, 0x53, 0x00, 0x6E, 0x00, 0x33, 0x00, 0x5A, 0x00,
				0x2F, 0x00, 0x51, 0x00, 0x7A, 0x00, 0x2B, 0x00, 0x48, 0x00, 0x76, 0x00, 0x6A, 0x00, 0x4C, 0x00,
				0x49, 0x00, 0x57, 0x00, 0x2F, 0x00, 0x76, 0x00, 0x44, 0x00, 0x77, 0x00, 0x7A, 0x00, 0x77, 0x00,
				0x44, 0x00, 0x5A, 0x00, 0x67, 0x00, 0x41, 0x00, 0x41, 0x00, 0x43, 0x00, 0x4E, 0x00, 0x6D, 0x00,
				0x73, 0x00, 0x64, 0x00, 0x34, 0x00, 0x65, 0x00, 0x79, 0x00, 0x68, 0x00, 0x4E, 0x00, 0x49, 0x00,
				0x75, 0x00, 0x59, 0x00, 0x41, 0x00, 0x47, 0x00, 0x62, 0x00, 0x58, 0x00, 0x62, 0x00, 0x41, 0x00,
				0x4B, 0x00, 0x51, 0x00, 0x37, 0x00, 0x63, 0x00, 0x4A, 0x00, 0x66, 0x00, 0x31, 0x00, 0x6B, 0x00,
				0x78, 0x00, 0x31, 0x00, 0x31, 0x00, 0x6D, 0x00, 0x4E, 0x00, 0x42, 0x00, 0x49, 0x00, 0x34, 0x00,
				0x79, 0x00, 0x42, 0x00, 0x44, 0x00, 0x36, 0x00, 0x4E, 0x00, 0x4E, 0x00, 0x54, 0x00, 0x53, 0x00,
				0x6F, 0x00, 0x63, 0x00, 0x75, 0x00, 0x46, 0x00, 0x42, 0x00, 0x6A, 0x00, 0x4F, 0x00, 0x6B, 0x00,
				0x2B, 0x00, 0x73, 0x00, 0x41, 0x00, 0x5A, 0x00, 0x4C, 0x00, 0x35, 0x00, 0x5A, 0x00, 0x34, 0x00,
				0x56, 0x00, 0x4E, 0x00, 0x32, 0x00, 0x4D, 0x00, 0x4C, 0x00, 0x71, 0x00, 0x49, 0x00, 0x35, 0x00,
				0x71, 0x00, 0x38, 0x00, 0x58, 0x00, 0x54, 0x00, 0x58, 0x00, 0x35, 0x00, 0x72, 0x00, 0x58, 0x00,
				0x57, 0x00, 0x65, 0x00, 0x79, 0x00, 0x4B, 0x00, 0x75, 0x00, 0x62, 0x00, 0x76, 0x00, 0x49, 0x00,
				0x2F, 0x00, 0x59, 0x00, 0x2F, 0x00, 0x6D, 0x00, 0x64, 0x00, 0x42, 0x00, 0x6A, 0x00, 0x64, 0x00,
				0x4E, 0x00, 0x36, 0x00, 0x37, 0x00, 0x51, 0x00, 0x57, 0x00, 0x49, 0x00, 0x72, 0x00, 0x75, 0x00,
				0x65, 0x00, 0x73, 0x00, 0x4B, 0x00, 0x52, 0x00, 0x56, 0x00, 0x65, 0x00, 0x32, 0x00, 0x35, 0x00,
				0x31, 0x00, 0x31, 0x00, 0x54, 0x00, 0x6E, 0x00, 0x42, 0x00, 0x58, 0x00, 0x46, 0x00, 0x62, 0x00,
				0x70, 0x00, 0x53, 0x00, 0x47, 0x00, 0x6E, 0x00, 0x42, 0x00, 0x4A, 0x00, 0x65, 0x00, 0x38, 0x00,
				0x6F, 0x00, 0x31, 0x00, 0x4B, 0x00, 0x69, 0x00, 0x50, 0x00, 0x55, 0x00, 0x70, 0x00, 0x55, 0x00,
				0x4B, 0x00, 0x6A, 0x00, 0x48, 0x00, 0x74, 0x00, 0x54, 0x00, 0x6D, 0x00, 0x75, 0x00, 0x34, 0x00,
				0x36, 0x00, 0x4F, 0x00, 0x43, 0x00, 0x4F, 0x00, 0x38, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x62, 0x00,
				0x48, 0x00, 0x47, 0x00, 0x6C, 0x00, 0x70, 0x00, 0x4F, 0x00, 0x70, 0x00, 0x62, 0x00, 0x70, 0x00,
				0x6E, 0x00, 0x50, 0x00, 0x49, 0x00, 0x73, 0x00, 0x79, 0x00, 0x36, 0x00, 0x39, 0x00, 0x49, 0x00,
				0x58, 0x00, 0x6B, 0x00, 0x45, 0x00, 0x7A, 0x00, 0x67, 0x00, 0x38, 0x00, 0x64, 0x00, 0x36, 0x00,
				0x34, 0x00, 0x43, 0x00, 0x74, 0x00, 0x65, 0x00, 0x54, 0x00, 0x2F, 0x00, 0x61, 0x00, 0x63, 0x00,
				0x73, 0x00, 0x35, 0x00, 0x68, 0x00, 0x4F, 0x00, 0x72, 0x00, 0x62, 0x00, 0x32, 0x00, 0x44, 0x00,
				0x73, 0x00, 0x44, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x4A, 0x00, 0x71, 0x00, 0x65, 0x00, 0x6D, 0x00,
				0x46, 0x00, 0x58, 0x00, 0x54, 0x00, 0x47, 0x00, 0x6D, 0x00, 0x35, 0x00, 0x30, 0x00, 0x37, 0x00,
				0x30, 0x00, 0x65, 0x00, 0x71, 0x00, 0x35, 0x00, 0x74, 0x00, 0x75, 0x00, 0x6A, 0x00, 0x69, 0x00,
				0x5A, 0x00, 0x75, 0x00, 0x43, 0x00, 0x52, 0x00, 0x30, 0x00, 0x4C, 0x00, 0x54, 0x00, 0x36, 0x00,
				0x62, 0x00, 0x59, 0x00, 0x49, 0x00, 0x76, 0x00, 0x59, 0x00, 0x64, 0x00, 0x76, 0x00, 0x42, 0x00,
				0x6D, 0x00, 0x70, 0x00, 0x52, 0x00, 0x6C, 0x00, 0x31, 0x00, 0x33, 0x00, 0x38, 0x00, 0x41, 0x00,
				0x53, 0x00, 0x42, 0x00, 0x32, 0x00, 0x58, 0x00, 0x48, 0x00, 0x30, 0x00, 0x36, 0x00, 0x43, 0x00,
				0x4B, 0x00, 0x39, 0x00, 0x33, 0x00, 0x55, 0x00, 0x38, 0x00, 0x63, 0x00, 0x4F, 0x00, 0x54, 0x00,
				0x38, 0x00, 0x68, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x6A, 0x00, 0x32, 0x00, 0x53, 0x00, 0x4D, 0x00,
				0x49, 0x00, 0x61, 0x00, 0x2B, 0x00, 0x4B, 0x00, 0x30, 0x00, 0x37, 0x00, 0x62, 0x00, 0x72, 0x00,
				0x6F, 0x00, 0x66, 0x00, 0x43, 0x00, 0x50, 0x00, 0x4B, 0x00, 0x35, 0x00, 0x37, 0x00, 0x51, 0x00,
				0x66, 0x00, 0x43, 0x00, 0x4D, 0x00, 0x35, 0x00, 0x32, 0x00, 0x4F, 0x00, 0x49, 0x00, 0x4B, 0x00,
				0x33, 0x00, 0x2F, 0x00, 0x30, 0x00, 0x67, 0x00, 0x70, 0x00, 0x6F, 0x00, 0x4C, 0x00, 0x41, 0x00,
				0x6C, 0x00, 0x4A, 0x00, 0x6E, 0x00, 0x49, 0x00, 0x56, 0x00, 0x59, 0x00, 0x72, 0x00, 0x45, 0x00,
				0x6B, 0x00, 0x6B, 0x00, 0x41, 0x00, 0x6E, 0x00, 0x47, 0x00, 0x59, 0x00, 0x79, 0x00, 0x70, 0x00,
				0x52, 0x00, 0x34, 0x00, 0x45, 0x00, 0x34, 0x00, 0x6F, 0x00, 0x4D, 0x00, 0x4D, 0x00, 0x33, 0x00,
				0x63, 0x00, 0x48, 0x00, 0x32, 0x00, 0x38, 0x00, 0x4D, 0x00, 0x42, 0x00, 0x4C, 0x00, 0x66, 0x00,
				0x30, 0x00, 0x76, 0x00, 0x47, 0x00, 0x57, 0x00, 0x2F, 0x00, 0x4D, 0x00, 0x62, 0x00, 0x6E, 0x00,
				0x74, 0x00, 0x61, 0x00, 0x31, 0x00, 0x35, 0x00, 0x47, 0x00, 0x37, 0x00, 0x47, 0x00, 0x72, 0x00,
				0x71, 0x00, 0x76, 0x00, 0x54, 0x00, 0x41, 0x00, 0x73, 0x00, 0x5A, 0x00, 0x30, 0x00, 0x78, 0x00,
				0x42, 0x00, 0x6C, 0x00, 0x35, 0x00, 0x76, 0x00, 0x38, 0x00, 0x74, 0x00, 0x44, 0x00, 0x31, 0x00,
				0x4F, 0x00, 0x70, 0x00, 0x70, 0x00, 0x6B, 0x00, 0x47, 0x00, 0x6D, 0x00, 0x2B, 0x00, 0x78, 0x00,
				0x56, 0x00, 0x62, 0x00, 0x54, 0x00, 0x78, 0x00, 0x49, 0x00, 0x6E, 0x00, 0x2F, 0x00, 0x31, 0x00,
				0x7A, 0x00, 0x51, 0x00, 0x67, 0x00, 0x67, 0x00, 0x32, 0x00, 0x71, 0x00, 0x54, 0x00, 0x4F, 0x00,
				0x45, 0x00, 0x53, 0x00, 0x6D, 0x00, 0x6E, 0x00, 0x63, 0x00, 0x49, 0x00, 0x4B, 0x00, 0x38, 0x00,
				0x49, 0x00, 0x44, 0x00, 0x6A, 0x00, 0x46, 0x00, 0x50, 0x00, 0x7A, 0x00, 0x79, 0x00, 0x59, 0x00,
				0x31, 0x00, 0x71, 0x00, 0x38, 0x00, 0x45, 0x00, 0x49, 0x00, 0x6A, 0x00, 0x38, 0x00, 0x39, 0x00,
				0x52, 0x00, 0x72, 0x00, 0x2B, 0x00, 0x63, 0x00, 0x6C, 0x00, 0x51, 0x00, 0x4C, 0x00, 0x33, 0x00,
				0x62, 0x00, 0x76, 0x00, 0x39, 0x00, 0x69, 0x00, 0x38, 0x00, 0x4F, 0x00, 0x34, 0x00, 0x68, 0x00,
				0x77, 0x00, 0x66, 0x00, 0x43, 0x00, 0x62, 0x00, 0x5A, 0x00, 0x51, 0x00, 0x65, 0x00, 0x63, 0x00,
				0x38, 0x00, 0x59, 0x00, 0x4F, 0x00, 0x31, 0x00, 0x4D, 0x00, 0x67, 0x00, 0x4F, 0x00, 0x5A, 0x00,
				0x32, 0x00, 0x63, 0x00, 0x2B, 0x00, 0x5A, 0x00, 0x74, 0x00, 0x39, 0x00, 0x45, 0x00, 0x55, 0x00,
				0x54, 0x00, 0x67, 0x00, 0x31, 0x00, 0x78, 0x00, 0x51, 0x00, 0x49, 0x00, 0x31, 0x00, 0x6A, 0x00,
				0x49, 0x00, 0x71, 0x00, 0x76, 0x00, 0x2B, 0x00, 0x65, 0x00, 0x47, 0x00, 0x63, 0x00, 0x62, 0x00,
				0x47, 0x00, 0x50, 0x00, 0x66, 0x00, 0x47, 0x00, 0x78, 0x00, 0x4C, 0x00, 0x4C, 0x00, 0x45, 0x00,
				0x57, 0x00, 0x76, 0x00, 0x66, 0x00, 0x2B, 0x00, 0x6A, 0x00, 0x54, 0x00, 0x71, 0x00, 0x58, 0x00,
				0x63, 0x00, 0x6B, 0x00, 0x55, 0x00, 0x68, 0x00, 0x79, 0x00, 0x4A, 0x00, 0x42, 0x00, 0x47, 0x00,
				0x33, 0x00, 0x6D, 0x00, 0x41, 0x00, 0x45, 0x00, 0x3D, 0x00, 0x26, 0x00, 0x70, 0x00, 0x3D, 0x00,
				0xDF, 0x31, 0x12, 0x79, 0x58, 0x7C, 0x0F, 0xCD, 0x2B, 0xED, 0x31, 0x0D, 0x8A, 0x06, 0x71, 0xA7,
				0xC4, 0xA6, 0xDE, 0xBB, 0x08, 0x4F, 0x37, 0x12, 0x07, 0xE2, 0xE9, 0x09, 0xC7, 0xB0, 0x2A, 0x1D,
				0x74, 0x6C, 0x73, 0x2D, 0x75, 0x6E, 0x69, 0x71, 0x75, 0x65, 0x3A, 0x20, 0x87, 0xE9, 0x38, 0xE3,
				0x2C, 0x32, 0x4F, 0x6C, 0xF9, 0x8E, 0x5B, 0x0D, 0x40, 0xB2, 0x1B, 0x57, 0x0E, 0xAB, 0xFE, 0xEF,
				0x2F, 0xCD, 0x58, 0xDA, 0x0F, 0x7F, 0xBD, 0x9C, 0xD0, 0x8B, 0xF2, 0x15, 0x85, 0xF3, 0x83, 0x20,
				0x7C, 0x22, 0xF8, 0x17, 0x9A, 0x95, 0x8F, 0xFF
			}
				};
			actual.InterpretPayload();

			Assert.AreEqual(expected.TdsVersion, actual.TdsVersion);
			Assert.AreEqual(expected.PacketSize, actual.PacketSize);
			Assert.AreEqual(expected.ClientProgVer, actual.ClientProgVer);
			Assert.AreEqual(expected.ClientPid, actual.ClientPid);
			Assert.AreEqual(expected.ConnectionId, actual.ConnectionId);
			Assert.AreEqual(expected.OptionFlags1, actual.OptionFlags1);
			Assert.AreEqual(expected.OptionFlags2, actual.OptionFlags2);
			Assert.AreEqual(expected.TypeFlags, actual.TypeFlags);
			Assert.AreEqual(expected.OptionFlags3, actual.OptionFlags3);
			Assert.AreEqual(expected.ClientTimeZone, actual.ClientTimeZone);
			Assert.AreEqual(expected.ClientLCID, actual.ClientLCID);
			Assert.AreEqual(expected.HostName, actual.HostName);
			Assert.AreEqual(expected.UserName, actual.UserName);
			Assert.AreEqual(expected.Password, actual.Password);
			Assert.AreEqual(expected.AppName, actual.AppName);
			Assert.AreEqual(expected.ServerName, actual.ServerName);
			EnumerableAssert.AreEqual(expected.FeatureExt, actual.FeatureExt, FeatureOptComparer.Instance);
			Assert.AreEqual(expected.ClientInterfaceName, actual.ClientInterfaceName);
			Assert.AreEqual(expected.Language, actual.Language);
			Assert.AreEqual(expected.Database, actual.Database);
			EnumerableAssert.AreEqual(expected.ClientID, actual.ClientID);
			EnumerableAssert.AreEqual(expected.SSPI, actual.SSPI);
			Assert.AreEqual(expected.AttachDBFile, actual.AttachDBFile);
			Assert.AreEqual(expected.ChangePassword, actual.ChangePassword);
		}

		[TestMethod]
		public void TestGeneratePayloadSimple()
		{
			TDSLogin7Message msg =
				new TDSLogin7Message
				{
					TdsVersion = 0x72090002,
					PacketSize = 0x00001000,
					ClientProgVer = 0x07000000,
					ClientPid = 0x00000100,
					ConnectionId = 0x00000000,
					OptionFlags1 = TDSLogin7Message.OptionFlags1Enum.ByteOrderX86 | TDSLogin7Message.OptionFlags1Enum.CharsetASCII | TDSLogin7Message.OptionFlags1Enum.FloatFormatIEEE754 | TDSLogin7Message.OptionFlags1Enum.UseDBNotify | TDSLogin7Message.OptionFlags1Enum.DatabaseFatal | TDSLogin7Message.OptionFlags1Enum.SetLangNotify,
					OptionFlags2 = TDSLogin7Message.OptionFlags2Enum.LanguageFatal | TDSLogin7Message.OptionFlags2Enum.ODBC | TDSLogin7Message.OptionFlags2Enum.UserTypeNormal,
					TypeFlags = TDSLogin7Message.TypeFlagsEnum.SqlTypeDefault,
					OptionFlags3 = TDSLogin7Message.OptionFlags3Enum.UnknownCollationHandlingRestricted,
					ClientTimeZone = 480,
					ClientLCID = (TDSLogin7Message.ClientLCIDEnum)0x0409,
					HostName = "skostov1",
					UserName = "sa",
					// ReSharper disable once StringLiteralTypo
					AppName = "OSQL-32",
					ClientInterfaceName = "ODBC",
					ClientID = new byte[] { 0x00, 0x50, 0x8B, 0xE2, 0xB7, 0x8F }
				};
			msg.GeneratePayload();

			var expected = new byte[]
			{
				0x88, 0x00, 0x00, 0x00, 0x02, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
				0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x00, 0x00, 0xE0, 0x01, 0x00, 0x00,
				0x09, 0x04, 0x00, 0x00, 0x5E, 0x00, 0x08, 0x00, 0x6E, 0x00, 0x02, 0x00, 0x72, 0x00, 0x00, 0x00,
				0x72, 0x00, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x04, 0x00,
				0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x50, 0x8B, 0xE2, 0xB7, 0x8F, 0x88, 0x00,
				0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x00,
				0x6B, 0x00, 0x6F, 0x00, 0x73, 0x00, 0x74, 0x00, 0x6F, 0x00, 0x76, 0x00, 0x31, 0x00, 0x73, 0x00,
				0x61, 0x00, 0x4F, 0x00, 0x53, 0x00, 0x51, 0x00, 0x4C, 0x00, 0x2D, 0x00, 0x33, 0x00, 0x32, 0x00,
				0x4F, 0x00, 0x44, 0x00, 0x42, 0x00, 0x43, 0x00
			};
			var actual = msg.Payload;

			EnumerableAssert.AreEqual(expected, actual);
		}

		[TestMethod]
		public void TestGeneratePayloadWithSessionRecovery()
		{
			TDSLogin7Message msg =
				new TDSLogin7Message
				{
					TdsVersion = 0x74000004,
					PacketSize = 0x00001000,
					ClientProgVer = 0x07000000,
					ClientPid = 0x00000100,
					ConnectionId = 0x00000000,
					OptionFlags1 = TDSLogin7Message.OptionFlags1Enum.ByteOrderX86 | TDSLogin7Message.OptionFlags1Enum.CharsetASCII | TDSLogin7Message.OptionFlags1Enum.FloatFormatIEEE754 | TDSLogin7Message.OptionFlags1Enum.UseDBNotify | TDSLogin7Message.OptionFlags1Enum.DatabaseFatal | TDSLogin7Message.OptionFlags1Enum.SetLangNotify,
					OptionFlags2 = TDSLogin7Message.OptionFlags2Enum.LanguageFatal | TDSLogin7Message.OptionFlags2Enum.ODBC | TDSLogin7Message.OptionFlags2Enum.UserTypeNormal,
					TypeFlags = TDSLogin7Message.TypeFlagsEnum.SqlTypeDefault,
					OptionFlags3 = TDSLogin7Message.OptionFlags3Enum.UnknownCollationHandlingRestricted | TDSLogin7Message.OptionFlags3Enum.Extension,
					ClientTimeZone = 480,
					ClientLCID = (TDSLogin7Message.ClientLCIDEnum)0x0409,
					UserName = "sa",
					// ReSharper disable StringLiteralTypo
					Password = "abcdEFGH",
					AppName = "OSQL-32",
					ClientInterfaceName = "ODBC",
					Database = "tempdb",
					// ReSharper restore StringLiteralTypo
					ClientID = new byte[] { 0x00, 0x50, 0x8B, 0xE2, 0xB7, 0x8F },
					FeatureExt = new[]
					{
						new TDSLogin7Message.FeatureOpt
						{

							FeatureId = TDSLogin7Message.FeatureId.SessionRecovery,
							FeatureData = new byte[]
							{
								0x56, 0x00, 0x00, 0x00, 0x06, 0x6D, 0x00, 0x61, 0x00, 0x73, 0x00, 0x74, 0x00, 0x65, 0x00, 0x72,
								0x00, 0x05, 0x09, 0x04, 0xD0, 0x00, 0x34, 0x0A, 0x75, 0x00, 0x73, 0x00, 0x5F, 0x00, 0x65, 0x00,
								0x6E, 0x00, 0x67, 0x00, 0x6C, 0x00, 0x69, 0x00, 0x73, 0x00, 0x68, 0x00, 0x00, 0x09, 0x00, 0x60,
								0x81, 0x14, 0xFF, 0xE7, 0xFF, 0xFF, 0x00, 0x02, 0x02, 0x07, 0x01, 0x04, 0x01, 0x00, 0x05, 0x04,
								0xFF, 0xFF, 0xFF, 0xFF, 0x06, 0x01, 0x00, 0x07, 0x01, 0x02, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,
								0x00, 0x00, 0x00, 0x00, 0x09, 0x04, 0xFF, 0xFF, 0xFF, 0xFF, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00,
								0x00, 0x09, 0x04, 0x28, 0x23, 0x00, 0x00
							}
						}
					}
				};
			msg.GeneratePayload();

			var expected = new byte[]
			{
				0x05, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x74, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
				0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x00, 0x10, 0xE0, 0x01, 0x00, 0x00,
				0x09, 0x04, 0x00, 0x00, 0x5E, 0x00, 0x00, 0x00, 0x5E, 0x00, 0x02, 0x00, 0x62, 0x00, 0x08, 0x00,
				0x72, 0x00, 0x07, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x04, 0x00, 0x84, 0x00, 0x04, 0x00,
				0x8C, 0x00, 0x00, 0x00, 0x8C, 0x00, 0x06, 0x00, 0x00, 0x50, 0x8B, 0xE2, 0xB7, 0x8F, 0x98, 0x00,
				0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x00,
				0x61, 0x00, 0xB3, 0xA5, 0x83, 0xA5, 0x93, 0xA5, 0xE3, 0xA5, 0xF1, 0xA5, 0xC1, 0xA5, 0xD1, 0xA5,
				0x21, 0xA5, 0x4F, 0x00, 0x53, 0x00, 0x51, 0x00, 0x4C, 0x00, 0x2D, 0x00, 0x33, 0x00, 0x32, 0x00,
				0x98, 0x00, 0x00, 0x00, 0x4F, 0x00, 0x44, 0x00, 0x42, 0x00, 0x43, 0x00, 0x74, 0x00, 0x65, 0x00,
				0x6D, 0x00, 0x70, 0x00, 0x64, 0x00, 0x62, 0x00, 0x01, 0x67, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00,
				0x00, 0x06, 0x6D, 0x00, 0x61, 0x00, 0x73, 0x00, 0x74, 0x00, 0x65, 0x00, 0x72, 0x00, 0x05, 0x09,
				0x04, 0xD0, 0x00, 0x34, 0x0A, 0x75, 0x00, 0x73, 0x00, 0x5F, 0x00, 0x65, 0x00, 0x6E, 0x00, 0x67,
				0x00, 0x6C, 0x00, 0x69, 0x00, 0x73, 0x00, 0x68, 0x00, 0x00, 0x09, 0x00, 0x60, 0x81, 0x14, 0xFF,
				0xE7, 0xFF, 0xFF, 0x00, 0x02, 0x02, 0x07, 0x01, 0x04, 0x01, 0x00, 0x05, 0x04, 0xFF, 0xFF, 0xFF,
				0xFF, 0x06, 0x01, 0x00, 0x07, 0x01, 0x02, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x09, 0x04, 0xFF, 0xFF, 0xFF, 0xFF, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x04,
				0x28, 0x23, 0x00, 0x00, 0xFF
			};
			var actual = msg.Payload;

			EnumerableAssert.AreEqual(expected, actual);
		}

		[TestMethod]
		public void TestGeneratePayloadWithFederation()
		{
			TDSLogin7Message msg =
				new TDSLogin7Message
				{
					TdsVersion = 0x74000004,
					PacketSize = 0x00001000,
					ClientProgVer = 0x07000000,
					ClientPid = 0x00003740,
					ConnectionId = 0x00000000,
					OptionFlags1 = TDSLogin7Message.OptionFlags1Enum.ByteOrderX86 | TDSLogin7Message.OptionFlags1Enum.CharsetASCII | TDSLogin7Message.OptionFlags1Enum.FloatFormatIEEE754 |
						TDSLogin7Message.OptionFlags1Enum.UseDBNotify | TDSLogin7Message.OptionFlags1Enum.DatabaseFatal | TDSLogin7Message.OptionFlags1Enum.SetLangNotify,
					OptionFlags2 = TDSLogin7Message.OptionFlags2Enum.LanguageFatal | TDSLogin7Message.OptionFlags2Enum.ODBC | TDSLogin7Message.OptionFlags2Enum.UserTypeNormal,
					TypeFlags = TDSLogin7Message.TypeFlagsEnum.SqlTypeDefault,
					OptionFlags3 = TDSLogin7Message.OptionFlags3Enum.UnknownCollationHandlingRestricted | TDSLogin7Message.OptionFlags3Enum.Extension,
					ClientTimeZone = 480,
					ClientLCID = (TDSLogin7Message.ClientLCIDEnum)0x0409,
					// ReSharper disable StringLiteralTypo
					HostName = "DANBENED3-XGZUO",
					AppName = "SQLCMD",
					ServerName = "cloud.dev.mscds.com,1435",
					// ReSharper restore StringLiteralTypo
					ClientInterfaceName = "ODBC",
					ClientID = new byte[] { 0x00, 0x15, 0x5D, 0x71, 0xE7, 0x42 },
					FeatureExt = new[]
					{
						new TDSLogin7Message.FeatureOpt
						{
							FeatureId = TDSLogin7Message.FeatureId.FedAuth,
							FeatureData = new byte[]
							{
								0x01, 0xE2, 0x06, 0x00, 0x00, 0x74, 0x00, 0x3D, 0x00, 0x45, 0x00, 0x77, 0x00, 0x43, 0x00, 0x51,
								0x00, 0x41, 0x00, 0x6A, 0x00, 0x4B, 0x00, 0x6A, 0x00, 0x42, 0x00, 0x77, 0x00, 0x41, 0x00, 0x55,
								0x00, 0x53, 0x00, 0x30, 0x00, 0x48, 0x00, 0x6F, 0x00, 0x2F, 0x00, 0x30, 0x00, 0x65, 0x00, 0x31,
								0x00, 0x52, 0x00, 0x35, 0x00, 0x4D, 0x00, 0x32, 0x00, 0x77, 0x00, 0x37, 0x00, 0x74, 0x00, 0x69,
								0x00, 0x44, 0x00, 0x72, 0x00, 0x36, 0x00, 0x70, 0x00, 0x4D, 0x00, 0x63, 0x00, 0x75, 0x00, 0x77,
								0x00, 0x33, 0x00, 0x35, 0x00, 0x6B, 0x00, 0x41, 0x00, 0x41, 0x00, 0x61, 0x00, 0x62, 0x00, 0x76,
								0x00, 0x45, 0x00, 0x38, 0x00, 0x6F, 0x00, 0x55, 0x00, 0x45, 0x00, 0x71, 0x00, 0x2F, 0x00, 0x50,
								0x00, 0x45, 0x00, 0x75, 0x00, 0x4C, 0x00, 0x37, 0x00, 0x32, 0x00, 0x64, 0x00, 0x54, 0x00, 0x74,
								0x00, 0x64, 0x00, 0x4D, 0x00, 0x42, 0x00, 0x43, 0x00, 0x7A, 0x00, 0x46, 0x00, 0x37, 0x00, 0x41,
								0x00, 0x64, 0x00, 0x4A, 0x00, 0x6D, 0x00, 0x6E, 0x00, 0x70, 0x00, 0x45, 0x00, 0x68, 0x00, 0x34,
								0x00, 0x32, 0x00, 0x65, 0x00, 0x41, 0x00, 0x46, 0x00, 0x57, 0x00, 0x37, 0x00, 0x2F, 0x00, 0x38,
								0x00, 0x49, 0x00, 0x6A, 0x00, 0x41, 0x00, 0x53, 0x00, 0x6D, 0x00, 0x78, 0x00, 0x79, 0x00, 0x50,
								0x00, 0x30, 0x00, 0x30, 0x00, 0x71, 0x00, 0x59, 0x00, 0x64, 0x00, 0x76, 0x00, 0x65, 0x00, 0x31,
								0x00, 0x5A, 0x00, 0x6B, 0x00, 0x45, 0x00, 0x2F, 0x00, 0x58, 0x00, 0x6C, 0x00, 0x63, 0x00, 0x4E,
								0x00, 0x79, 0x00, 0x69, 0x00, 0x77, 0x00, 0x6F, 0x00, 0x55, 0x00, 0x76, 0x00, 0x54, 0x00, 0x4E,
								0x00, 0x4F, 0x00, 0x6B, 0x00, 0x74, 0x00, 0x42, 0x00, 0x45, 0x00, 0x4C, 0x00, 0x71, 0x00, 0x76,
								0x00, 0x37, 0x00, 0x58, 0x00, 0x4A, 0x00, 0x54, 0x00, 0x6F, 0x00, 0x47, 0x00, 0x71, 0x00, 0x56,
								0x00, 0x32, 0x00, 0x6F, 0x00, 0x6B, 0x00, 0x51, 0x00, 0x6E, 0x00, 0x2F, 0x00, 0x65, 0x00, 0x63,
								0x00, 0x50, 0x00, 0x41, 0x00, 0x78, 0x00, 0x32, 0x00, 0x71, 0x00, 0x6A, 0x00, 0x55, 0x00, 0x57,
								0x00, 0x74, 0x00, 0x6B, 0x00, 0x54, 0x00, 0x59, 0x00, 0x56, 0x00, 0x66, 0x00, 0x62, 0x00, 0x72,
								0x00, 0x51, 0x00, 0x58, 0x00, 0x78, 0x00, 0x76, 0x00, 0x4E, 0x00, 0x58, 0x00, 0x66, 0x00, 0x69,
								0x00, 0x72, 0x00, 0x77, 0x00, 0x47, 0x00, 0x57, 0x00, 0x63, 0x00, 0x43, 0x00, 0x45, 0x00, 0x4B,
								0x00, 0x79, 0x00, 0x46, 0x00, 0x64, 0x00, 0x76, 0x00, 0x35, 0x00, 0x62, 0x00, 0x78, 0x00, 0x55,
								0x00, 0x75, 0x00, 0x68, 0x00, 0x69, 0x00, 0x49, 0x00, 0x62, 0x00, 0x39, 0x00, 0x42, 0x00, 0x55,
								0x00, 0x56, 0x00, 0x54, 0x00, 0x56, 0x00, 0x4B, 0x00, 0x6A, 0x00, 0x57, 0x00, 0x51, 0x00, 0x34,
								0x00, 0x78, 0x00, 0x4E, 0x00, 0x46, 0x00, 0x4E, 0x00, 0x6B, 0x00, 0x43, 0x00, 0x33, 0x00, 0x73,
								0x00, 0x58, 0x00, 0x71, 0x00, 0x6F, 0x00, 0x46, 0x00, 0x52, 0x00, 0x31, 0x00, 0x49, 0x00, 0x46,
								0x00, 0x64, 0x00, 0x76, 0x00, 0x6A, 0x00, 0x4C, 0x00, 0x76, 0x00, 0x63, 0x00, 0x71, 0x00, 0x71,
								0x00, 0x38, 0x00, 0x70, 0x00, 0x47, 0x00, 0x69, 0x00, 0x54, 0x00, 0x64, 0x00, 0x51, 0x00, 0x2F,
								0x00, 0x76, 0x00, 0x37, 0x00, 0x6F, 0x00, 0x44, 0x00, 0x6B, 0x00, 0x38, 0x00, 0x78, 0x00, 0x5A,
								0x00, 0x42, 0x00, 0x6E, 0x00, 0x61, 0x00, 0x73, 0x00, 0x4C, 0x00, 0x36, 0x00, 0x71, 0x00, 0x2F,
								0x00, 0x62, 0x00, 0x38, 0x00, 0x36, 0x00, 0x73, 0x00, 0x5A, 0x00, 0x6C, 0x00, 0x2B, 0x00, 0x55,
								0x00, 0x35, 0x00, 0x77, 0x00, 0x69, 0x00, 0x4C, 0x00, 0x50, 0x00, 0x50, 0x00, 0x54, 0x00, 0x68,
								0x00, 0x67, 0x00, 0x4D, 0x00, 0x70, 0x00, 0x49, 0x00, 0x46, 0x00, 0x2F, 0x00, 0x42, 0x00, 0x61,
								0x00, 0x43, 0x00, 0x2F, 0x00, 0x72, 0x00, 0x45, 0x00, 0x4F, 0x00, 0x51, 0x00, 0x50, 0x00, 0x6B,
								0x00, 0x6B, 0x00, 0x63, 0x00, 0x51, 0x00, 0x4A, 0x00, 0x4F, 0x00, 0x56, 0x00, 0x54, 0x00, 0x71,
								0x00, 0x51, 0x00, 0x72, 0x00, 0x64, 0x00, 0x63, 0x00, 0x4B, 0x00, 0x4F, 0x00, 0x4D, 0x00, 0x56,
								0x00, 0x4E, 0x00, 0x4A, 0x00, 0x61, 0x00, 0x55, 0x00, 0x50, 0x00, 0x49, 0x00, 0x52, 0x00, 0x33,
								0x00, 0x64, 0x00, 0x2B, 0x00, 0x42, 0x00, 0x62, 0x00, 0x43, 0x00, 0x66, 0x00, 0x31, 0x00, 0x6D,
								0x00, 0x5A, 0x00, 0x62, 0x00, 0x7A, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x4F, 0x00, 0x51,
								0x00, 0x77, 0x00, 0x39, 0x00, 0x57, 0x00, 0x37, 0x00, 0x49, 0x00, 0x77, 0x00, 0x63, 0x00, 0x6D,
								0x00, 0x30, 0x00, 0x45, 0x00, 0x44, 0x00, 0x69, 0x00, 0x78, 0x00, 0x51, 0x00, 0x71, 0x00, 0x70,
								0x00, 0x41, 0x00, 0x74, 0x00, 0x61, 0x00, 0x75, 0x00, 0x63, 0x00, 0x42, 0x00, 0x48, 0x00, 0x4F,
								0x00, 0x33, 0x00, 0x46, 0x00, 0x75, 0x00, 0x37, 0x00, 0x6D, 0x00, 0x49, 0x00, 0x63, 0x00, 0x69,
								0x00, 0x78, 0x00, 0x46, 0x00, 0x39, 0x00, 0x67, 0x00, 0x53, 0x00, 0x2F, 0x00, 0x46, 0x00, 0x4B,
								0x00, 0x38, 0x00, 0x2F, 0x00, 0x37, 0x00, 0x6C, 0x00, 0x6E, 0x00, 0x78, 0x00, 0x34, 0x00, 0x53,
								0x00, 0x6E, 0x00, 0x33, 0x00, 0x5A, 0x00, 0x2F, 0x00, 0x51, 0x00, 0x7A, 0x00, 0x2B, 0x00, 0x48,
								0x00, 0x76, 0x00, 0x6A, 0x00, 0x4C, 0x00, 0x49, 0x00, 0x57, 0x00, 0x2F, 0x00, 0x76, 0x00, 0x44,
								0x00, 0x77, 0x00, 0x7A, 0x00, 0x77, 0x00, 0x44, 0x00, 0x5A, 0x00, 0x67, 0x00, 0x41, 0x00, 0x41,
								0x00, 0x43, 0x00, 0x4E, 0x00, 0x6D, 0x00, 0x73, 0x00, 0x64, 0x00, 0x34, 0x00, 0x65, 0x00, 0x79,
								0x00, 0x68, 0x00, 0x4E, 0x00, 0x49, 0x00, 0x75, 0x00, 0x59, 0x00, 0x41, 0x00, 0x47, 0x00, 0x62,
								0x00, 0x58, 0x00, 0x62, 0x00, 0x41, 0x00, 0x4B, 0x00, 0x51, 0x00, 0x37, 0x00, 0x63, 0x00, 0x4A,
								0x00, 0x66, 0x00, 0x31, 0x00, 0x6B, 0x00, 0x78, 0x00, 0x31, 0x00, 0x31, 0x00, 0x6D, 0x00, 0x4E,
								0x00, 0x42, 0x00, 0x49, 0x00, 0x34, 0x00, 0x79, 0x00, 0x42, 0x00, 0x44, 0x00, 0x36, 0x00, 0x4E,
								0x00, 0x4E, 0x00, 0x54, 0x00, 0x53, 0x00, 0x6F, 0x00, 0x63, 0x00, 0x75, 0x00, 0x46, 0x00, 0x42,
								0x00, 0x6A, 0x00, 0x4F, 0x00, 0x6B, 0x00, 0x2B, 0x00, 0x73, 0x00, 0x41, 0x00, 0x5A, 0x00, 0x4C,
								0x00, 0x35, 0x00, 0x5A, 0x00, 0x34, 0x00, 0x56, 0x00, 0x4E, 0x00, 0x32, 0x00, 0x4D, 0x00, 0x4C,
								0x00, 0x71, 0x00, 0x49, 0x00, 0x35, 0x00, 0x71, 0x00, 0x38, 0x00, 0x58, 0x00, 0x54, 0x00, 0x58,
								0x00, 0x35, 0x00, 0x72, 0x00, 0x58, 0x00, 0x57, 0x00, 0x65, 0x00, 0x79, 0x00, 0x4B, 0x00, 0x75,
								0x00, 0x62, 0x00, 0x76, 0x00, 0x49, 0x00, 0x2F, 0x00, 0x59, 0x00, 0x2F, 0x00, 0x6D, 0x00, 0x64,
								0x00, 0x42, 0x00, 0x6A, 0x00, 0x64, 0x00, 0x4E, 0x00, 0x36, 0x00, 0x37, 0x00, 0x51, 0x00, 0x57,
								0x00, 0x49, 0x00, 0x72, 0x00, 0x75, 0x00, 0x65, 0x00, 0x73, 0x00, 0x4B, 0x00, 0x52, 0x00, 0x56,
								0x00, 0x65, 0x00, 0x32, 0x00, 0x35, 0x00, 0x31, 0x00, 0x31, 0x00, 0x54, 0x00, 0x6E, 0x00, 0x42,
								0x00, 0x58, 0x00, 0x46, 0x00, 0x62, 0x00, 0x70, 0x00, 0x53, 0x00, 0x47, 0x00, 0x6E, 0x00, 0x42,
								0x00, 0x4A, 0x00, 0x65, 0x00, 0x38, 0x00, 0x6F, 0x00, 0x31, 0x00, 0x4B, 0x00, 0x69, 0x00, 0x50,
								0x00, 0x55, 0x00, 0x70, 0x00, 0x55, 0x00, 0x4B, 0x00, 0x6A, 0x00, 0x48, 0x00, 0x74, 0x00, 0x54,
								0x00, 0x6D, 0x00, 0x75, 0x00, 0x34, 0x00, 0x36, 0x00, 0x4F, 0x00, 0x43, 0x00, 0x4F, 0x00, 0x38,
								0x00, 0x4A, 0x00, 0x49, 0x00, 0x62, 0x00, 0x48, 0x00, 0x47, 0x00, 0x6C, 0x00, 0x70, 0x00, 0x4F,
								0x00, 0x70, 0x00, 0x62, 0x00, 0x70, 0x00, 0x6E, 0x00, 0x50, 0x00, 0x49, 0x00, 0x73, 0x00, 0x79,
								0x00, 0x36, 0x00, 0x39, 0x00, 0x49, 0x00, 0x58, 0x00, 0x6B, 0x00, 0x45, 0x00, 0x7A, 0x00, 0x67,
								0x00, 0x38, 0x00, 0x64, 0x00, 0x36, 0x00, 0x34, 0x00, 0x43, 0x00, 0x74, 0x00, 0x65, 0x00, 0x54,
								0x00, 0x2F, 0x00, 0x61, 0x00, 0x63, 0x00, 0x73, 0x00, 0x35, 0x00, 0x68, 0x00, 0x4F, 0x00, 0x72,
								0x00, 0x62, 0x00, 0x32, 0x00, 0x44, 0x00, 0x73, 0x00, 0x44, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x4A,
								0x00, 0x71, 0x00, 0x65, 0x00, 0x6D, 0x00, 0x46, 0x00, 0x58, 0x00, 0x54, 0x00, 0x47, 0x00, 0x6D,
								0x00, 0x35, 0x00, 0x30, 0x00, 0x37, 0x00, 0x30, 0x00, 0x65, 0x00, 0x71, 0x00, 0x35, 0x00, 0x74,
								0x00, 0x75, 0x00, 0x6A, 0x00, 0x69, 0x00, 0x5A, 0x00, 0x75, 0x00, 0x43, 0x00, 0x52, 0x00, 0x30,
								0x00, 0x4C, 0x00, 0x54, 0x00, 0x36, 0x00, 0x62, 0x00, 0x59, 0x00, 0x49, 0x00, 0x76, 0x00, 0x59,
								0x00, 0x64, 0x00, 0x76, 0x00, 0x42, 0x00, 0x6D, 0x00, 0x70, 0x00, 0x52, 0x00, 0x6C, 0x00, 0x31,
								0x00, 0x33, 0x00, 0x38, 0x00, 0x41, 0x00, 0x53, 0x00, 0x42, 0x00, 0x32, 0x00, 0x58, 0x00, 0x48,
								0x00, 0x30, 0x00, 0x36, 0x00, 0x43, 0x00, 0x4B, 0x00, 0x39, 0x00, 0x33, 0x00, 0x55, 0x00, 0x38,
								0x00, 0x63, 0x00, 0x4F, 0x00, 0x54, 0x00, 0x38, 0x00, 0x68, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x6A,
								0x00, 0x32, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x49, 0x00, 0x61, 0x00, 0x2B, 0x00, 0x4B, 0x00, 0x30,
								0x00, 0x37, 0x00, 0x62, 0x00, 0x72, 0x00, 0x6F, 0x00, 0x66, 0x00, 0x43, 0x00, 0x50, 0x00, 0x4B,
								0x00, 0x35, 0x00, 0x37, 0x00, 0x51, 0x00, 0x66, 0x00, 0x43, 0x00, 0x4D, 0x00, 0x35, 0x00, 0x32,
								0x00, 0x4F, 0x00, 0x49, 0x00, 0x4B, 0x00, 0x33, 0x00, 0x2F, 0x00, 0x30, 0x00, 0x67, 0x00, 0x70,
								0x00, 0x6F, 0x00, 0x4C, 0x00, 0x41, 0x00, 0x6C, 0x00, 0x4A, 0x00, 0x6E, 0x00, 0x49, 0x00, 0x56,
								0x00, 0x59, 0x00, 0x72, 0x00, 0x45, 0x00, 0x6B, 0x00, 0x6B, 0x00, 0x41, 0x00, 0x6E, 0x00, 0x47,
								0x00, 0x59, 0x00, 0x79, 0x00, 0x70, 0x00, 0x52, 0x00, 0x34, 0x00, 0x45, 0x00, 0x34, 0x00, 0x6F,
								0x00, 0x4D, 0x00, 0x4D, 0x00, 0x33, 0x00, 0x63, 0x00, 0x48, 0x00, 0x32, 0x00, 0x38, 0x00, 0x4D,
								0x00, 0x42, 0x00, 0x4C, 0x00, 0x66, 0x00, 0x30, 0x00, 0x76, 0x00, 0x47, 0x00, 0x57, 0x00, 0x2F,
								0x00, 0x4D, 0x00, 0x62, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x61, 0x00, 0x31, 0x00, 0x35, 0x00, 0x47,
								0x00, 0x37, 0x00, 0x47, 0x00, 0x72, 0x00, 0x71, 0x00, 0x76, 0x00, 0x54, 0x00, 0x41, 0x00, 0x73,
								0x00, 0x5A, 0x00, 0x30, 0x00, 0x78, 0x00, 0x42, 0x00, 0x6C, 0x00, 0x35, 0x00, 0x76, 0x00, 0x38,
								0x00, 0x74, 0x00, 0x44, 0x00, 0x31, 0x00, 0x4F, 0x00, 0x70, 0x00, 0x70, 0x00, 0x6B, 0x00, 0x47,
								0x00, 0x6D, 0x00, 0x2B, 0x00, 0x78, 0x00, 0x56, 0x00, 0x62, 0x00, 0x54, 0x00, 0x78, 0x00, 0x49,
								0x00, 0x6E, 0x00, 0x2F, 0x00, 0x31, 0x00, 0x7A, 0x00, 0x51, 0x00, 0x67, 0x00, 0x67, 0x00, 0x32,
								0x00, 0x71, 0x00, 0x54, 0x00, 0x4F, 0x00, 0x45, 0x00, 0x53, 0x00, 0x6D, 0x00, 0x6E, 0x00, 0x63,
								0x00, 0x49, 0x00, 0x4B, 0x00, 0x38, 0x00, 0x49, 0x00, 0x44, 0x00, 0x6A, 0x00, 0x46, 0x00, 0x50,
								0x00, 0x7A, 0x00, 0x79, 0x00, 0x59, 0x00, 0x31, 0x00, 0x71, 0x00, 0x38, 0x00, 0x45, 0x00, 0x49,
								0x00, 0x6A, 0x00, 0x38, 0x00, 0x39, 0x00, 0x52, 0x00, 0x72, 0x00, 0x2B, 0x00, 0x63, 0x00, 0x6C,
								0x00, 0x51, 0x00, 0x4C, 0x00, 0x33, 0x00, 0x62, 0x00, 0x76, 0x00, 0x39, 0x00, 0x69, 0x00, 0x38,
								0x00, 0x4F, 0x00, 0x34, 0x00, 0x68, 0x00, 0x77, 0x00, 0x66, 0x00, 0x43, 0x00, 0x62, 0x00, 0x5A,
								0x00, 0x51, 0x00, 0x65, 0x00, 0x63, 0x00, 0x38, 0x00, 0x59, 0x00, 0x4F, 0x00, 0x31, 0x00, 0x4D,
								0x00, 0x67, 0x00, 0x4F, 0x00, 0x5A, 0x00, 0x32, 0x00, 0x63, 0x00, 0x2B, 0x00, 0x5A, 0x00, 0x74,
								0x00, 0x39, 0x00, 0x45, 0x00, 0x55, 0x00, 0x54, 0x00, 0x67, 0x00, 0x31, 0x00, 0x78, 0x00, 0x51,
								0x00, 0x49, 0x00, 0x31, 0x00, 0x6A, 0x00, 0x49, 0x00, 0x71, 0x00, 0x76, 0x00, 0x2B, 0x00, 0x65,
								0x00, 0x47, 0x00, 0x63, 0x00, 0x62, 0x00, 0x47, 0x00, 0x50, 0x00, 0x66, 0x00, 0x47, 0x00, 0x78,
								0x00, 0x4C, 0x00, 0x4C, 0x00, 0x45, 0x00, 0x57, 0x00, 0x76, 0x00, 0x66, 0x00, 0x2B, 0x00, 0x6A,
								0x00, 0x54, 0x00, 0x71, 0x00, 0x58, 0x00, 0x63, 0x00, 0x6B, 0x00, 0x55, 0x00, 0x68, 0x00, 0x79,
								0x00, 0x4A, 0x00, 0x42, 0x00, 0x47, 0x00, 0x33, 0x00, 0x6D, 0x00, 0x41, 0x00, 0x45, 0x00, 0x3D,
								0x00, 0x26, 0x00, 0x70, 0x00, 0x3D, 0x00, 0xDF, 0x31, 0x12, 0x79, 0x58, 0x7C, 0x0F, 0xCD, 0x2B,
								0xED, 0x31, 0x0D, 0x8A, 0x06, 0x71, 0xA7, 0xC4, 0xA6, 0xDE, 0xBB, 0x08, 0x4F, 0x37, 0x12, 0x07,
								0xE2, 0xE9, 0x09, 0xC7, 0xB0, 0x2A, 0x1D, 0x74, 0x6C, 0x73, 0x2D, 0x75, 0x6E, 0x69, 0x71, 0x75,
								0x65, 0x3A, 0x20, 0x87, 0xE9, 0x38, 0xE3, 0x2C, 0x32, 0x4F, 0x6C, 0xF9, 0x8E, 0x5B, 0x0D, 0x40,
								0xB2, 0x1B, 0x57, 0x0E, 0xAB, 0xFE, 0xEF, 0x2F, 0xCD, 0x58, 0xDA, 0x0F, 0x7F, 0xBD, 0x9C, 0xD0,
								0x8B, 0xF2, 0x15, 0x85, 0xF3, 0x83, 0x20, 0x7C, 0x22, 0xF8, 0x17, 0x9A, 0x95, 0x8F
							}
						}
					}
				};
			msg.GeneratePayload();

			byte[] expected = new byte[]
			{
				0x08, 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x74, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
				0x40, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x00, 0x10, 0xE0, 0x01, 0x00, 0x00,
				0x09, 0x04, 0x00, 0x00, 0x5E, 0x00, 0x0F, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00,
				0x7C, 0x00, 0x06, 0x00, 0x88, 0x00, 0x18, 0x00, 0xB8, 0x00, 0x04, 0x00, 0xBC, 0x00, 0x04, 0x00,
				0xC4, 0x00, 0x00, 0x00, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x15, 0x5D, 0x71, 0xE7, 0x42, 0xC4, 0x00,
				0x00, 0x00, 0xC4, 0x00, 0x00, 0x00, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00,
				0x41, 0x00, 0x4E, 0x00, 0x42, 0x00, 0x45, 0x00, 0x4E, 0x00, 0x45, 0x00, 0x44, 0x00, 0x33, 0x00,
				0x2D, 0x00, 0x58, 0x00, 0x47, 0x00, 0x5A, 0x00, 0x55, 0x00, 0x4F, 0x00, 0x53, 0x00, 0x51, 0x00,
				0x4C, 0x00, 0x43, 0x00, 0x4D, 0x00, 0x44, 0x00, 0x63, 0x00, 0x6C, 0x00, 0x6F, 0x00, 0x75, 0x00,
				0x64, 0x00, 0x2E, 0x00, 0x64, 0x00, 0x65, 0x00, 0x76, 0x00, 0x2E, 0x00, 0x6D, 0x00, 0x73, 0x00,
				0x63, 0x00, 0x64, 0x00, 0x73, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x2C, 0x00,
				0x31, 0x00, 0x34, 0x00, 0x33, 0x00, 0x35, 0x00, 0xC4, 0x00, 0x00, 0x00, 0x4F, 0x00, 0x44, 0x00,
				0x42, 0x00, 0x43, 0x00, 0x02, 0x3E, 0x07, 0x00, 0x00, 0x01, 0xE2, 0x06, 0x00, 0x00, 0x74, 0x00,
				0x3D, 0x00, 0x45, 0x00, 0x77, 0x00, 0x43, 0x00, 0x51, 0x00, 0x41, 0x00, 0x6A, 0x00, 0x4B, 0x00,
				0x6A, 0x00, 0x42, 0x00, 0x77, 0x00, 0x41, 0x00, 0x55, 0x00, 0x53, 0x00, 0x30, 0x00, 0x48, 0x00,
				0x6F, 0x00, 0x2F, 0x00, 0x30, 0x00, 0x65, 0x00, 0x31, 0x00, 0x52, 0x00, 0x35, 0x00, 0x4D, 0x00,
				0x32, 0x00, 0x77, 0x00, 0x37, 0x00, 0x74, 0x00, 0x69, 0x00, 0x44, 0x00, 0x72, 0x00, 0x36, 0x00,
				0x70, 0x00, 0x4D, 0x00, 0x63, 0x00, 0x75, 0x00, 0x77, 0x00, 0x33, 0x00, 0x35, 0x00, 0x6B, 0x00,
				0x41, 0x00, 0x41, 0x00, 0x61, 0x00, 0x62, 0x00, 0x76, 0x00, 0x45, 0x00, 0x38, 0x00, 0x6F, 0x00,
				0x55, 0x00, 0x45, 0x00, 0x71, 0x00, 0x2F, 0x00, 0x50, 0x00, 0x45, 0x00, 0x75, 0x00, 0x4C, 0x00,
				0x37, 0x00, 0x32, 0x00, 0x64, 0x00, 0x54, 0x00, 0x74, 0x00, 0x64, 0x00, 0x4D, 0x00, 0x42, 0x00,
				0x43, 0x00, 0x7A, 0x00, 0x46, 0x00, 0x37, 0x00, 0x41, 0x00, 0x64, 0x00, 0x4A, 0x00, 0x6D, 0x00,
				0x6E, 0x00, 0x70, 0x00, 0x45, 0x00, 0x68, 0x00, 0x34, 0x00, 0x32, 0x00, 0x65, 0x00, 0x41, 0x00,
				0x46, 0x00, 0x57, 0x00, 0x37, 0x00, 0x2F, 0x00, 0x38, 0x00, 0x49, 0x00, 0x6A, 0x00, 0x41, 0x00,
				0x53, 0x00, 0x6D, 0x00, 0x78, 0x00, 0x79, 0x00, 0x50, 0x00, 0x30, 0x00, 0x30, 0x00, 0x71, 0x00,
				0x59, 0x00, 0x64, 0x00, 0x76, 0x00, 0x65, 0x00, 0x31, 0x00, 0x5A, 0x00, 0x6B, 0x00, 0x45, 0x00,
				0x2F, 0x00, 0x58, 0x00, 0x6C, 0x00, 0x63, 0x00, 0x4E, 0x00, 0x79, 0x00, 0x69, 0x00, 0x77, 0x00,
				0x6F, 0x00, 0x55, 0x00, 0x76, 0x00, 0x54, 0x00, 0x4E, 0x00, 0x4F, 0x00, 0x6B, 0x00, 0x74, 0x00,
				0x42, 0x00, 0x45, 0x00, 0x4C, 0x00, 0x71, 0x00, 0x76, 0x00, 0x37, 0x00, 0x58, 0x00, 0x4A, 0x00,
				0x54, 0x00, 0x6F, 0x00, 0x47, 0x00, 0x71, 0x00, 0x56, 0x00, 0x32, 0x00, 0x6F, 0x00, 0x6B, 0x00,
				0x51, 0x00, 0x6E, 0x00, 0x2F, 0x00, 0x65, 0x00, 0x63, 0x00, 0x50, 0x00, 0x41, 0x00, 0x78, 0x00,
				0x32, 0x00, 0x71, 0x00, 0x6A, 0x00, 0x55, 0x00, 0x57, 0x00, 0x74, 0x00, 0x6B, 0x00, 0x54, 0x00,
				0x59, 0x00, 0x56, 0x00, 0x66, 0x00, 0x62, 0x00, 0x72, 0x00, 0x51, 0x00, 0x58, 0x00, 0x78, 0x00,
				0x76, 0x00, 0x4E, 0x00, 0x58, 0x00, 0x66, 0x00, 0x69, 0x00, 0x72, 0x00, 0x77, 0x00, 0x47, 0x00,
				0x57, 0x00, 0x63, 0x00, 0x43, 0x00, 0x45, 0x00, 0x4B, 0x00, 0x79, 0x00, 0x46, 0x00, 0x64, 0x00,
				0x76, 0x00, 0x35, 0x00, 0x62, 0x00, 0x78, 0x00, 0x55, 0x00, 0x75, 0x00, 0x68, 0x00, 0x69, 0x00,
				0x49, 0x00, 0x62, 0x00, 0x39, 0x00, 0x42, 0x00, 0x55, 0x00, 0x56, 0x00, 0x54, 0x00, 0x56, 0x00,
				0x4B, 0x00, 0x6A, 0x00, 0x57, 0x00, 0x51, 0x00, 0x34, 0x00, 0x78, 0x00, 0x4E, 0x00, 0x46, 0x00,
				0x4E, 0x00, 0x6B, 0x00, 0x43, 0x00, 0x33, 0x00, 0x73, 0x00, 0x58, 0x00, 0x71, 0x00, 0x6F, 0x00,
				0x46, 0x00, 0x52, 0x00, 0x31, 0x00, 0x49, 0x00, 0x46, 0x00, 0x64, 0x00, 0x76, 0x00, 0x6A, 0x00,
				0x4C, 0x00, 0x76, 0x00, 0x63, 0x00, 0x71, 0x00, 0x71, 0x00, 0x38, 0x00, 0x70, 0x00, 0x47, 0x00,
				0x69, 0x00, 0x54, 0x00, 0x64, 0x00, 0x51, 0x00, 0x2F, 0x00, 0x76, 0x00, 0x37, 0x00, 0x6F, 0x00,
				0x44, 0x00, 0x6B, 0x00, 0x38, 0x00, 0x78, 0x00, 0x5A, 0x00, 0x42, 0x00, 0x6E, 0x00, 0x61, 0x00,
				0x73, 0x00, 0x4C, 0x00, 0x36, 0x00, 0x71, 0x00, 0x2F, 0x00, 0x62, 0x00, 0x38, 0x00, 0x36, 0x00,
				0x73, 0x00, 0x5A, 0x00, 0x6C, 0x00, 0x2B, 0x00, 0x55, 0x00, 0x35, 0x00, 0x77, 0x00, 0x69, 0x00,
				0x4C, 0x00, 0x50, 0x00, 0x50, 0x00, 0x54, 0x00, 0x68, 0x00, 0x67, 0x00, 0x4D, 0x00, 0x70, 0x00,
				0x49, 0x00, 0x46, 0x00, 0x2F, 0x00, 0x42, 0x00, 0x61, 0x00, 0x43, 0x00, 0x2F, 0x00, 0x72, 0x00,
				0x45, 0x00, 0x4F, 0x00, 0x51, 0x00, 0x50, 0x00, 0x6B, 0x00, 0x6B, 0x00, 0x63, 0x00, 0x51, 0x00,
				0x4A, 0x00, 0x4F, 0x00, 0x56, 0x00, 0x54, 0x00, 0x71, 0x00, 0x51, 0x00, 0x72, 0x00, 0x64, 0x00,
				0x63, 0x00, 0x4B, 0x00, 0x4F, 0x00, 0x4D, 0x00, 0x56, 0x00, 0x4E, 0x00, 0x4A, 0x00, 0x61, 0x00,
				0x55, 0x00, 0x50, 0x00, 0x49, 0x00, 0x52, 0x00, 0x33, 0x00, 0x64, 0x00, 0x2B, 0x00, 0x42, 0x00,
				0x62, 0x00, 0x43, 0x00, 0x66, 0x00, 0x31, 0x00, 0x6D, 0x00, 0x5A, 0x00, 0x62, 0x00, 0x7A, 0x00,
				0x6F, 0x00, 0x6E, 0x00, 0x64, 0x00, 0x4F, 0x00, 0x51, 0x00, 0x77, 0x00, 0x39, 0x00, 0x57, 0x00,
				0x37, 0x00, 0x49, 0x00, 0x77, 0x00, 0x63, 0x00, 0x6D, 0x00, 0x30, 0x00, 0x45, 0x00, 0x44, 0x00,
				0x69, 0x00, 0x78, 0x00, 0x51, 0x00, 0x71, 0x00, 0x70, 0x00, 0x41, 0x00, 0x74, 0x00, 0x61, 0x00,
				0x75, 0x00, 0x63, 0x00, 0x42, 0x00, 0x48, 0x00, 0x4F, 0x00, 0x33, 0x00, 0x46, 0x00, 0x75, 0x00,
				0x37, 0x00, 0x6D, 0x00, 0x49, 0x00, 0x63, 0x00, 0x69, 0x00, 0x78, 0x00, 0x46, 0x00, 0x39, 0x00,
				0x67, 0x00, 0x53, 0x00, 0x2F, 0x00, 0x46, 0x00, 0x4B, 0x00, 0x38, 0x00, 0x2F, 0x00, 0x37, 0x00,
				0x6C, 0x00, 0x6E, 0x00, 0x78, 0x00, 0x34, 0x00, 0x53, 0x00, 0x6E, 0x00, 0x33, 0x00, 0x5A, 0x00,
				0x2F, 0x00, 0x51, 0x00, 0x7A, 0x00, 0x2B, 0x00, 0x48, 0x00, 0x76, 0x00, 0x6A, 0x00, 0x4C, 0x00,
				0x49, 0x00, 0x57, 0x00, 0x2F, 0x00, 0x76, 0x00, 0x44, 0x00, 0x77, 0x00, 0x7A, 0x00, 0x77, 0x00,
				0x44, 0x00, 0x5A, 0x00, 0x67, 0x00, 0x41, 0x00, 0x41, 0x00, 0x43, 0x00, 0x4E, 0x00, 0x6D, 0x00,
				0x73, 0x00, 0x64, 0x00, 0x34, 0x00, 0x65, 0x00, 0x79, 0x00, 0x68, 0x00, 0x4E, 0x00, 0x49, 0x00,
				0x75, 0x00, 0x59, 0x00, 0x41, 0x00, 0x47, 0x00, 0x62, 0x00, 0x58, 0x00, 0x62, 0x00, 0x41, 0x00,
				0x4B, 0x00, 0x51, 0x00, 0x37, 0x00, 0x63, 0x00, 0x4A, 0x00, 0x66, 0x00, 0x31, 0x00, 0x6B, 0x00,
				0x78, 0x00, 0x31, 0x00, 0x31, 0x00, 0x6D, 0x00, 0x4E, 0x00, 0x42, 0x00, 0x49, 0x00, 0x34, 0x00,
				0x79, 0x00, 0x42, 0x00, 0x44, 0x00, 0x36, 0x00, 0x4E, 0x00, 0x4E, 0x00, 0x54, 0x00, 0x53, 0x00,
				0x6F, 0x00, 0x63, 0x00, 0x75, 0x00, 0x46, 0x00, 0x42, 0x00, 0x6A, 0x00, 0x4F, 0x00, 0x6B, 0x00,
				0x2B, 0x00, 0x73, 0x00, 0x41, 0x00, 0x5A, 0x00, 0x4C, 0x00, 0x35, 0x00, 0x5A, 0x00, 0x34, 0x00,
				0x56, 0x00, 0x4E, 0x00, 0x32, 0x00, 0x4D, 0x00, 0x4C, 0x00, 0x71, 0x00, 0x49, 0x00, 0x35, 0x00,
				0x71, 0x00, 0x38, 0x00, 0x58, 0x00, 0x54, 0x00, 0x58, 0x00, 0x35, 0x00, 0x72, 0x00, 0x58, 0x00,
				0x57, 0x00, 0x65, 0x00, 0x79, 0x00, 0x4B, 0x00, 0x75, 0x00, 0x62, 0x00, 0x76, 0x00, 0x49, 0x00,
				0x2F, 0x00, 0x59, 0x00, 0x2F, 0x00, 0x6D, 0x00, 0x64, 0x00, 0x42, 0x00, 0x6A, 0x00, 0x64, 0x00,
				0x4E, 0x00, 0x36, 0x00, 0x37, 0x00, 0x51, 0x00, 0x57, 0x00, 0x49, 0x00, 0x72, 0x00, 0x75, 0x00,
				0x65, 0x00, 0x73, 0x00, 0x4B, 0x00, 0x52, 0x00, 0x56, 0x00, 0x65, 0x00, 0x32, 0x00, 0x35, 0x00,
				0x31, 0x00, 0x31, 0x00, 0x54, 0x00, 0x6E, 0x00, 0x42, 0x00, 0x58, 0x00, 0x46, 0x00, 0x62, 0x00,
				0x70, 0x00, 0x53, 0x00, 0x47, 0x00, 0x6E, 0x00, 0x42, 0x00, 0x4A, 0x00, 0x65, 0x00, 0x38, 0x00,
				0x6F, 0x00, 0x31, 0x00, 0x4B, 0x00, 0x69, 0x00, 0x50, 0x00, 0x55, 0x00, 0x70, 0x00, 0x55, 0x00,
				0x4B, 0x00, 0x6A, 0x00, 0x48, 0x00, 0x74, 0x00, 0x54, 0x00, 0x6D, 0x00, 0x75, 0x00, 0x34, 0x00,
				0x36, 0x00, 0x4F, 0x00, 0x43, 0x00, 0x4F, 0x00, 0x38, 0x00, 0x4A, 0x00, 0x49, 0x00, 0x62, 0x00,
				0x48, 0x00, 0x47, 0x00, 0x6C, 0x00, 0x70, 0x00, 0x4F, 0x00, 0x70, 0x00, 0x62, 0x00, 0x70, 0x00,
				0x6E, 0x00, 0x50, 0x00, 0x49, 0x00, 0x73, 0x00, 0x79, 0x00, 0x36, 0x00, 0x39, 0x00, 0x49, 0x00,
				0x58, 0x00, 0x6B, 0x00, 0x45, 0x00, 0x7A, 0x00, 0x67, 0x00, 0x38, 0x00, 0x64, 0x00, 0x36, 0x00,
				0x34, 0x00, 0x43, 0x00, 0x74, 0x00, 0x65, 0x00, 0x54, 0x00, 0x2F, 0x00, 0x61, 0x00, 0x63, 0x00,
				0x73, 0x00, 0x35, 0x00, 0x68, 0x00, 0x4F, 0x00, 0x72, 0x00, 0x62, 0x00, 0x32, 0x00, 0x44, 0x00,
				0x73, 0x00, 0x44, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x4A, 0x00, 0x71, 0x00, 0x65, 0x00, 0x6D, 0x00,
				0x46, 0x00, 0x58, 0x00, 0x54, 0x00, 0x47, 0x00, 0x6D, 0x00, 0x35, 0x00, 0x30, 0x00, 0x37, 0x00,
				0x30, 0x00, 0x65, 0x00, 0x71, 0x00, 0x35, 0x00, 0x74, 0x00, 0x75, 0x00, 0x6A, 0x00, 0x69, 0x00,
				0x5A, 0x00, 0x75, 0x00, 0x43, 0x00, 0x52, 0x00, 0x30, 0x00, 0x4C, 0x00, 0x54, 0x00, 0x36, 0x00,
				0x62, 0x00, 0x59, 0x00, 0x49, 0x00, 0x76, 0x00, 0x59, 0x00, 0x64, 0x00, 0x76, 0x00, 0x42, 0x00,
				0x6D, 0x00, 0x70, 0x00, 0x52, 0x00, 0x6C, 0x00, 0x31, 0x00, 0x33, 0x00, 0x38, 0x00, 0x41, 0x00,
				0x53, 0x00, 0x42, 0x00, 0x32, 0x00, 0x58, 0x00, 0x48, 0x00, 0x30, 0x00, 0x36, 0x00, 0x43, 0x00,
				0x4B, 0x00, 0x39, 0x00, 0x33, 0x00, 0x55, 0x00, 0x38, 0x00, 0x63, 0x00, 0x4F, 0x00, 0x54, 0x00,
				0x38, 0x00, 0x68, 0x00, 0x68, 0x00, 0x6E, 0x00, 0x6A, 0x00, 0x32, 0x00, 0x53, 0x00, 0x4D, 0x00,
				0x49, 0x00, 0x61, 0x00, 0x2B, 0x00, 0x4B, 0x00, 0x30, 0x00, 0x37, 0x00, 0x62, 0x00, 0x72, 0x00,
				0x6F, 0x00, 0x66, 0x00, 0x43, 0x00, 0x50, 0x00, 0x4B, 0x00, 0x35, 0x00, 0x37, 0x00, 0x51, 0x00,
				0x66, 0x00, 0x43, 0x00, 0x4D, 0x00, 0x35, 0x00, 0x32, 0x00, 0x4F, 0x00, 0x49, 0x00, 0x4B, 0x00,
				0x33, 0x00, 0x2F, 0x00, 0x30, 0x00, 0x67, 0x00, 0x70, 0x00, 0x6F, 0x00, 0x4C, 0x00, 0x41, 0x00,
				0x6C, 0x00, 0x4A, 0x00, 0x6E, 0x00, 0x49, 0x00, 0x56, 0x00, 0x59, 0x00, 0x72, 0x00, 0x45, 0x00,
				0x6B, 0x00, 0x6B, 0x00, 0x41, 0x00, 0x6E, 0x00, 0x47, 0x00, 0x59, 0x00, 0x79, 0x00, 0x70, 0x00,
				0x52, 0x00, 0x34, 0x00, 0x45, 0x00, 0x34, 0x00, 0x6F, 0x00, 0x4D, 0x00, 0x4D, 0x00, 0x33, 0x00,
				0x63, 0x00, 0x48, 0x00, 0x32, 0x00, 0x38, 0x00, 0x4D, 0x00, 0x42, 0x00, 0x4C, 0x00, 0x66, 0x00,
				0x30, 0x00, 0x76, 0x00, 0x47, 0x00, 0x57, 0x00, 0x2F, 0x00, 0x4D, 0x00, 0x62, 0x00, 0x6E, 0x00,
				0x74, 0x00, 0x61, 0x00, 0x31, 0x00, 0x35, 0x00, 0x47, 0x00, 0x37, 0x00, 0x47, 0x00, 0x72, 0x00,
				0x71, 0x00, 0x76, 0x00, 0x54, 0x00, 0x41, 0x00, 0x73, 0x00, 0x5A, 0x00, 0x30, 0x00, 0x78, 0x00,
				0x42, 0x00, 0x6C, 0x00, 0x35, 0x00, 0x76, 0x00, 0x38, 0x00, 0x74, 0x00, 0x44, 0x00, 0x31, 0x00,
				0x4F, 0x00, 0x70, 0x00, 0x70, 0x00, 0x6B, 0x00, 0x47, 0x00, 0x6D, 0x00, 0x2B, 0x00, 0x78, 0x00,
				0x56, 0x00, 0x62, 0x00, 0x54, 0x00, 0x78, 0x00, 0x49, 0x00, 0x6E, 0x00, 0x2F, 0x00, 0x31, 0x00,
				0x7A, 0x00, 0x51, 0x00, 0x67, 0x00, 0x67, 0x00, 0x32, 0x00, 0x71, 0x00, 0x54, 0x00, 0x4F, 0x00,
				0x45, 0x00, 0x53, 0x00, 0x6D, 0x00, 0x6E, 0x00, 0x63, 0x00, 0x49, 0x00, 0x4B, 0x00, 0x38, 0x00,
				0x49, 0x00, 0x44, 0x00, 0x6A, 0x00, 0x46, 0x00, 0x50, 0x00, 0x7A, 0x00, 0x79, 0x00, 0x59, 0x00,
				0x31, 0x00, 0x71, 0x00, 0x38, 0x00, 0x45, 0x00, 0x49, 0x00, 0x6A, 0x00, 0x38, 0x00, 0x39, 0x00,
				0x52, 0x00, 0x72, 0x00, 0x2B, 0x00, 0x63, 0x00, 0x6C, 0x00, 0x51, 0x00, 0x4C, 0x00, 0x33, 0x00,
				0x62, 0x00, 0x76, 0x00, 0x39, 0x00, 0x69, 0x00, 0x38, 0x00, 0x4F, 0x00, 0x34, 0x00, 0x68, 0x00,
				0x77, 0x00, 0x66, 0x00, 0x43, 0x00, 0x62, 0x00, 0x5A, 0x00, 0x51, 0x00, 0x65, 0x00, 0x63, 0x00,
				0x38, 0x00, 0x59, 0x00, 0x4F, 0x00, 0x31, 0x00, 0x4D, 0x00, 0x67, 0x00, 0x4F, 0x00, 0x5A, 0x00,
				0x32, 0x00, 0x63, 0x00, 0x2B, 0x00, 0x5A, 0x00, 0x74, 0x00, 0x39, 0x00, 0x45, 0x00, 0x55, 0x00,
				0x54, 0x00, 0x67, 0x00, 0x31, 0x00, 0x78, 0x00, 0x51, 0x00, 0x49, 0x00, 0x31, 0x00, 0x6A, 0x00,
				0x49, 0x00, 0x71, 0x00, 0x76, 0x00, 0x2B, 0x00, 0x65, 0x00, 0x47, 0x00, 0x63, 0x00, 0x62, 0x00,
				0x47, 0x00, 0x50, 0x00, 0x66, 0x00, 0x47, 0x00, 0x78, 0x00, 0x4C, 0x00, 0x4C, 0x00, 0x45, 0x00,
				0x57, 0x00, 0x76, 0x00, 0x66, 0x00, 0x2B, 0x00, 0x6A, 0x00, 0x54, 0x00, 0x71, 0x00, 0x58, 0x00,
				0x63, 0x00, 0x6B, 0x00, 0x55, 0x00, 0x68, 0x00, 0x79, 0x00, 0x4A, 0x00, 0x42, 0x00, 0x47, 0x00,
				0x33, 0x00, 0x6D, 0x00, 0x41, 0x00, 0x45, 0x00, 0x3D, 0x00, 0x26, 0x00, 0x70, 0x00, 0x3D, 0x00,
				0xDF, 0x31, 0x12, 0x79, 0x58, 0x7C, 0x0F, 0xCD, 0x2B, 0xED, 0x31, 0x0D, 0x8A, 0x06, 0x71, 0xA7,
				0xC4, 0xA6, 0xDE, 0xBB, 0x08, 0x4F, 0x37, 0x12, 0x07, 0xE2, 0xE9, 0x09, 0xC7, 0xB0, 0x2A, 0x1D,
				0x74, 0x6C, 0x73, 0x2D, 0x75, 0x6E, 0x69, 0x71, 0x75, 0x65, 0x3A, 0x20, 0x87, 0xE9, 0x38, 0xE3,
				0x2C, 0x32, 0x4F, 0x6C, 0xF9, 0x8E, 0x5B, 0x0D, 0x40, 0xB2, 0x1B, 0x57, 0x0E, 0xAB, 0xFE, 0xEF,
				0x2F, 0xCD, 0x58, 0xDA, 0x0F, 0x7F, 0xBD, 0x9C, 0xD0, 0x8B, 0xF2, 0x15, 0x85, 0xF3, 0x83, 0x20,
				0x7C, 0x22, 0xF8, 0x17, 0x9A, 0x95, 0x8F, 0xFF
			};
			byte[] actual = msg.Payload;

			EnumerableAssert.AreEqual(expected, actual);
		}

		public class FeatureOptComparer : IComparer<TDSLogin7Message.FeatureOpt>
		{
			public static readonly FeatureOptComparer Instance = new FeatureOptComparer();
			private FeatureOptComparer() { }

			#region IComparer<FeatureOpt> Members

			public int Compare(TDSLogin7Message.FeatureOpt x, TDSLogin7Message.FeatureOpt y)
			{
				if (x == null)
					return y == null ? 0 : -1;
				if (y == null)
					return 1;

				var result = x.FeatureId.CompareTo(y.FeatureId);
				if (0 != result)
					return result;

				if (x.FeatureData == null)
					return y.FeatureData == null ? 0 : -1;
				if (y.FeatureData == null)
					return 1;
				var lastIdx = Math.Min(x.FeatureData.Length, y.FeatureData.Length);
				for (var idx = 0; idx < lastIdx; idx++)
				{
					result = x.FeatureData[idx].CompareTo(y.FeatureData[idx]);
					if (result != 0)
						return result;
				}
				return x.FeatureData.Length.CompareTo(y.FeatureData.Length);
			}

			#endregion
		}
	}
}